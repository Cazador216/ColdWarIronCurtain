Yeltsin_Campaign_Launch = {
    add_to_array = {
        Rus_Canidates = 1
    }
    set_variable = {
        Yeltsin_Position = Rus_Canidates^num
    }
    set_variable = {
        Yeltsin_Position_Slot = Rus_Canidates^num
    }
    add_to_array = {
        Rus_Charsima_Score = 4
    }
    add_to_array = {
        Rus_Stamina_Score = 1
    }
    add_to_array = {
        Rus_Fundraising_Score = 5
    }
    #Fundraising Setup
    set_variable = {
        fundraising_initial = 20
    }
    multiply_variable = {
        fundraising_initial = Rus_Fundraising_Score^Yeltsin_Position_Slot
    }
    add_to_array = {
        Rus_Campaign_Funds = fundraising_initial
    }
    #Fundraising End
    add_to_array = {
        Rus_Candidates_Color = 6
    }
    every_owned_state = {
        if = {
            limit = {  
                check_variable = {
                    Yeltsin_Standard_Deviation = 1
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 1
                max = 12
            }
            set_variable = { 
                Canidate_Support^ROOT.Yeltsin_Position = Canidate_Support_Temp
            }
        } 
        else_if = {
            limit = {   
                check_variable = {
                    Yeltsin_Standard_Deviation = 2
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 12	
                max = 24
            }
            set_variable = { 
                Canidate_Support^ROOT.Yeltsin_Position = Canidate_Support_Temp
            }
        } 
        else_if = {
            limit = {   
                check_variable = {
                    Yeltsin_Standard_Deviation = 3
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 24
                max = 36
            }
            set_variable = { 
                Canidate_Support^ROOT.Yeltsin_Position = Canidate_Support_Temp
            }
        } 
        else_if = {
            limit = {   
                check_variable = {
                    Yeltsin_Standard_Deviation = 4
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 36
                max = 48
            }
            set_variable = { 
                Canidate_Support^ROOT.Yeltsin_Position = Canidate_Support_Temp
            }
        } 
        else_if = {
            limit = {   
                check_variable = {
                    Yeltsin_Standard_Deviation = 5
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 48
                max = 60
            }
            set_variable = { 
                Canidate_Support^ROOT.Yeltsin_Position = Canidate_Support_Temp
            }
        } 
        else_if = {
            limit = {   
                check_variable = {
                    Yeltsin_Standard_Deviation = 6
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 60
                max = 72
            }
            set_variable = { 
                Canidate_Support^ROOT.Yeltsin_Position = Canidate_Support_Temp
            }
        } 
        else_if = {
            limit = {   
                check_variable = {
                    Yeltsin_Standard_Deviation = 7
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 72
                max = 84
            }
            set_variable = { 
                Canidate_Support^ROOT.Yeltsin_Position = Canidate_Support_Temp
            }
        } 
        else_if = {
            limit = {   
                check_variable = {
                    Yeltsin_Standard_Deviation = 8
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 84
                max = 96
            }
            set_variable = { 
                Canidate_Support^ROOT.Yeltsin_Position = Canidate_Support_Temp
            }
        } 
        else = { }
    }
    if = {
        limit = {
            check_variable = { Rus_Canidates^num > 1 }
            NOT = {
                has_country_flag = rus_election_map_generated
            }
        }
        generate_campaign_map_russia = yes
    }
}
Ryzhkov_Campaign_Launch = {
    add_to_array = {
        Rus_Canidates = 2
    }
    add_to_array = {
        Rus_Candidates_Color = 1
    }
    add_to_array = {
        Rus_Charsima_Score = 3
    }
    add_to_array = {
        Rus_Stamina_Score = 3
    }
    add_to_array = {
        Rus_Fundraising_Score = 3
    }
    set_variable = {
        Ryzhkov_Position = Rus_Canidates^num
    }
    set_variable = {
        Ryzhkov_Position_Slot = Rus_Canidates^num
    }
    #Fundraising Setup
    set_variable = {
        fundraising_initial = 20
    }
    multiply_variable = {
        fundraising_initial = Rus_Fundraising_Score^Ryzhkov_Position_Slot
    }
    add_to_array = {
        Rus_Campaign_Funds = fundraising_initial
    }
    every_owned_state = {
        if = {
            limit = {  
                check_variable = {
                    Ryzhkov_Standard_Deviation = 1
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 1
                max = 9
            }
            set_variable = { 
                Canidate_Support^ROOT.Ryzhkov_Position = Canidate_Support_Temp
            }
        } 
        else_if = {
            limit = {   
                check_variable = {
                    Ryzhkov_Standard_Deviation = 2
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 9	
                max = 18
            }
            set_variable = { 
                Canidate_Support^ROOT.Ryzhkov_Position = Canidate_Support_Temp
            }
        } 
        else_if = {
            limit = {   
                check_variable = {
                    Ryzhkov_Standard_Deviation = 3
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 18
                max = 27
            }
            set_variable = { 
                Canidate_Support^ROOT.Ryzhkov_Position = Canidate_Support_Temp
            }
        } 
        else_if = {
            limit = {   
                check_variable = {
                    Ryzhkov_Standard_Deviation = 4
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 27
                max = 36
            }
            set_variable = { 
                Canidate_Support^ROOT.Ryzhkov_Position = Canidate_Support_Temp
            }
        } 
        else_if = {
            limit = {   
                check_variable = {
                    Ryzhkov_Standard_Deviation = 5
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 36
                max = 45
            }
            set_variable = { 
                Canidate_Support^ROOT.Ryzhkov_Position = Canidate_Support_Temp
            }
        } 
        else_if = {
            limit = {   
                check_variable = {
                    Ryzhkov_Standard_Deviation = 6
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 45
                max = 54
            }
            set_variable = { 
                Canidate_Support^ROOT.Ryzhkov_Position = Canidate_Support_Temp
            }
        } 
        else_if = {
            limit = {   
                check_variable = {
                    Ryzhkov_Standard_Deviation = 7
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 54
                max = 63
            }
            set_variable = { 
                Canidate_Support^ROOT.Ryzhkov_Position = Canidate_Support_Temp
            }
        } 

        else = { }
    }
    if = {
        limit = {
            check_variable = { Rus_Canidates^num > 1 }
            NOT = {
                has_country_flag = rus_election_map_generated
            }
        }
        generate_campaign_map_russia = yes
    }
}
Zhirinovsky_Campaign_Launch = {
    add_to_array = {
        Rus_Canidates = 3
    }
    add_to_array = {
        Rus_Candidates_Color = 8
    }
    set_variable = {
        Zhirinovsky_Position = Rus_Canidates^num
    }
    add_to_array = {
        Rus_Charsima_Score = 4
    }
    add_to_array = {
        Rus_Stamina_Score = 5
    }
    add_to_array = {
        Rus_Fundraising_Score = 2
    }
    set_variable = {
        Zhirinovsky_Position_Slot = Rus_Canidates^num
    }
    #Fundraising Setup
    set_variable = {
        fundraising_initial = 20
    }
    multiply_variable = {
        fundraising_initial = Rus_Fundraising_Score^Zhirinovsky_Position_Slot
    }
    add_to_array = {
        Rus_Campaign_Funds = fundraising_initial
    }
    every_owned_state = {
        if = {
            limit = {  
                check_variable = {
                    Zhirinovsky_Standard_Deviation = 1
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 1
                max = 3
            }
            set_variable = { 
                Canidate_Support^ROOT.Zhirinovsky_Position = Canidate_Support_Temp
            }
        } 
        else_if = {
            limit = {   
                check_variable = {
                    Zhirinovsky_Standard_Deviation = 2
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 3	
                max = 6
            }
            set_variable = { 
                Canidate_Support^ROOT.Zhirinovsky_Position = Canidate_Support_Temp
            }
        } 
        else_if = {
            limit = {   
                check_variable = {
                    Zhirinovsky_Standard_Deviation = 3
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 6
                max = 9
            }
            set_variable = { 
                Canidate_Support^ROOT.Zhirinovsky_Position = Canidate_Support_Temp
            }
        } 
        else_if = {
            limit = {   
                check_variable = {
                    Zhirinovsky_Standard_Deviation = 4
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 9
                max = 12
            }
            set_variable = { 
                Canidate_Support^ROOT.Zhirinovsky_Position = Canidate_Support_Temp
            }
        } 
        else_if = {
            limit = {   
                check_variable = {
                    Zhirinovsky_Standard_Deviation = 5
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 12
                max = 15
            }
            set_variable = { 
                Canidate_Support^ROOT.Zhirinovsky_Position = Canidate_Support_Temp
            }
        } 
        else_if = {
            limit = {   
                check_variable = {
                    Zhirinovsky_Standard_Deviation = 6
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 15
                max = 18
            }
            set_variable = { 
                Canidate_Support^ROOT.Zhirinovsky_Position = Canidate_Support_Temp
            }
        } 
        else = { }
    }
    if = {
        limit = {
            check_variable = { Rus_Canidates^num > 1 }
            NOT = {
                has_country_flag = rus_election_map_generated
            }
        }
        generate_campaign_map_russia = yes
    }
}
Tuleyev_Campaign_Launch = {
    add_to_array = {
        Rus_Canidates = 4
    }
    add_to_array = {
        Rus_Candidates_Color = 2
    }
    set_variable = {
        Tuleyev_Position = Rus_Canidates^num
    }
    add_to_array = {
        Rus_Charsima_Score = 4
    }
    add_to_array = {
        Rus_Stamina_Score = 4
    }
    add_to_array = {
        Rus_Fundraising_Score = 2
    }
    set_variable = {
        Tuleyev_Position_Slot = Rus_Canidates^num
    }
    #Fundraising Setup
    set_variable = {
        fundraising_initial = 20
    }
    multiply_variable = {
        fundraising_initial = Rus_Fundraising_Score^Tuleyev_Position_Slot
    }
    add_to_array = {
        Rus_Campaign_Funds = fundraising_initial
    }
    every_owned_state = {
        if = {
            limit = {  
                check_variable = {
                    Tuleyev_Standard_Deviation = 1
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 1
                max = 6
            }
            set_variable = { 
                Canidate_Support^ROOT.Tuleyev_Position = Canidate_Support_Temp
            }
        } 
        else_if = {
            limit = {   
                check_variable = {
                    Tuleyev_Standard_Deviation = 2
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 6
                max = 12
            }
            set_variable = { 
                Canidate_Support^ROOT.Tuleyev_Position = Canidate_Support_Temp
            }
        } 
        else_if = {
            limit = {   
                check_variable = {
                    Tuleyev_Standard_Deviation = 3
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 12
                max = 18
            }
            set_variable = { 
                Canidate_Support^ROOT.Tuleyev_Position = Canidate_Support_Temp
            }
        } 
        else_if = {
            limit = {   
                check_variable = {
                    Tuleyev_Standard_Deviation = 4
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 18
                max = 24
            }
            set_variable = { 
                Canidate_Support^ROOT.Tuleyev_Position = Canidate_Support_Temp
            }
        } 
        else_if = {
            limit = {   
                check_variable = {
                    Tuleyev_Standard_Deviation = 5
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 24
                max = 30
            }
            set_variable = { 
                Canidate_Support^ROOT.Tuleyev_Position = Canidate_Support_Temp
            }
        } 
        else_if = {
            limit = {   
                check_variable = {
                    Tuleyev_Standard_Deviation = 6
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 30
                max = 34
            }
            set_variable = { 
                Canidate_Support^ROOT.Tuleyev_Position = Canidate_Support_Temp
            }
        } 
        else_if = {
            limit = {   
                check_variable = {
                    Tuleyev_Standard_Deviation = 7
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 42
                max = 48
            }
            set_variable = { 
                Canidate_Support^ROOT.Tuleyev_Position = Canidate_Support_Temp
            }
        } 

        else = { }
    }
    if = {
        limit = {
            check_variable = { Rus_Canidates^num > 1 }
            NOT = {
                has_country_flag = rus_election_map_generated
            }
        }
        generate_campaign_map_russia = yes
    }
}

Makashov_Campaign_Launch = {
    add_to_array = {
        Rus_Canidates = 6
    }
    add_to_array = {
        Rus_Candidates_Color = 14
    }
    add_to_array = {
        Rus_Charsima_Score = 3
    }
    add_to_array = {
        Rus_Stamina_Score = 3
    }
    add_to_array = {
        Rus_Fundraising_Score = 2
    }

    set_variable = {
        Makashov_Position = Rus_Canidates^num
    }
    set_variable = {
        Makashov_Position_Slot = Rus_Canidates^num
    }
    #Fundraising Setup
    set_variable = {
        fundraising_initial = 20
    }
    multiply_variable = {
        fundraising_initial = Rus_Fundraising_Score^Makashov_Position_Slot
    }
    add_to_array = {
        Rus_Campaign_Funds = fundraising_initial
    }
    every_owned_state = {
        if = {
            limit = {  
                check_variable = {
                    Makashov_Standard_Deviation = 1
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 1
                max = 2
            }
            set_variable = { 
                Canidate_Support^ROOT.Makashov_Position = Canidate_Support_Temp
            }
        } 
        else_if = {
            limit = {   
                check_variable = {
                    Makashov_Standard_Deviation = 2
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 2
                max = 4
            }
            set_variable = { 
                Canidate_Support^ROOT.Makashov_Position = Canidate_Support_Temp
            }
        } 
        else_if = {
            limit = {   
                check_variable = {
                    Makashov_Standard_Deviation = 3
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 4
                max = 6
            }
            set_variable = { 
                Canidate_Support^ROOT.Makashov_Position = Canidate_Support_Temp
            }
        } 
        else_if = {
            limit = {   
                check_variable = {
                    Makashov_Standard_Deviation = 4
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 6
                max = 8
            }
            set_variable = { 
                Canidate_Support^ROOT.Makashov_Position = Canidate_Support_Temp
            }
        } 
        else_if = {
            limit = {   
                check_variable = {
                    Makashov_Standard_Deviation = 5
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 8
                max = 10
            }
            set_variable = { 
                Canidate_Support^ROOT.Makashov_Position = Canidate_Support_Temp
            }
        } 
        else_if = {
            limit = {   
                check_variable = {
                    Makashov_Standard_Deviation = 6
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 10
                max = 12
            }
            set_variable = { 
                Canidate_Support^ROOT.Makashov_Position = Canidate_Support_Temp
            }
        } 
        else_if = {
            limit = {   
                check_variable = {
                    Makashov_Standard_Deviation = 7
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 12
                max = 14
            }
            set_variable = { 
                Canidate_Support^ROOT.Makashov_Position = Canidate_Support_Temp
            }
        } 

        else = { }
    }
    if = {
        limit = {
            check_variable = { Rus_Canidates^num > 1 }
            NOT = {
                has_country_flag = rus_election_map_generated
            }
        }
        generate_campaign_map_russia = yes
    }
}
Bakatin_Campaign_Launch = {
    add_to_array = {
        Rus_Canidates = 5
    }
    add_to_array = {
        Rus_Candidates_Color = 4
    }
    set_variable = {
        Bakatin_Position = Rus_Canidates^num
    }
    add_to_array = {
        Rus_Charsima_Score = 3
    }
    add_to_array = {
        Rus_Stamina_Score = 3
    }
    add_to_array = {
        Rus_Fundraising_Score = 4
    }
    set_variable = {
        Bakatin_Position_Slot = Rus_Canidates^num
    }
    #Fundraising Setup
    set_variable = {
        fundraising_initial = 20
    }
    multiply_variable = {
        fundraising_initial = Rus_Fundraising_Score^Bakatin_Position_Slot
    }
    add_to_array = {
        Rus_Campaign_Funds = fundraising_initial
    }
    every_owned_state = {
        if = {
            limit = {  
                check_variable = {
                    Bakatin_Standard_Deviation = 1
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 1
                max = 2
            }
            set_variable = { 
                Canidate_Support^ROOT.Bakatin_Position = Canidate_Support_Temp
            }
        } 
        else_if = {
            limit = {   
                check_variable = {
                    Bakatin_Standard_Deviation = 2
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 2
                max = 4
            }
            set_variable = { 
                Canidate_Support^ROOT.Bakatin_Position = Canidate_Support_Temp
            }
        } 
        else_if = {
            limit = {   
                check_variable = {
                    Bakatin_Standard_Deviation = 3
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 4
                max = 6
            }
            set_variable = { 
                Canidate_Support^ROOT.Bakatin_Position = Canidate_Support_Temp
            }
        } 
        else_if = {
            limit = {   
                check_variable = {
                    Bakatin_Standard_Deviation = 4
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 6
                max = 8
            }
            set_variable = { 
                Canidate_Support^ROOT.Bakatin_Position = Canidate_Support_Temp
            }
        } 
        else_if = {
            limit = {   
                check_variable = {
                    Bakatin_Standard_Deviation = 5
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 8
                max = 10
            }
            set_variable = { 
                Canidate_Support^ROOT.Bakatin_Position = Canidate_Support_Temp
            }
        } 
        else_if = {
            limit = {   
                check_variable = {
                    Bakatin_Standard_Deviation = 6
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 10
                max = 12
            }
            set_variable = { 
                Canidate_Support^ROOT.Bakatin_Position = Canidate_Support_Temp
            }
        } 
        else_if = {
            limit = {   
                check_variable = {
                    Bakatin_Standard_Deviation = 7
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 12
                max = 14
            }
            set_variable = { 
                Canidate_Support^ROOT.Bakatin_Position = Canidate_Support_Temp
            }
        } 
        else_if = {
            limit = {   
                check_variable = {
                    Bakatin_Standard_Deviation = 8
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 14
                max = 16
            }
            set_variable = { 
                Canidate_Support^ROOT.Bakatin_Position = Canidate_Support_Temp
            }
        } 
        else = { }
    }
    if = {
        limit = {
            check_variable = { Rus_Canidates^num > 1 }
            NOT = {
                has_country_flag = rus_election_map_generated
            }
        }
        generate_campaign_map_russia = yes
    }
}
generate_national_election_polling = {
    set_variable = { RUS.National_Canidate_Votes_K_0 = 0 }
    set_variable = { RUS.National_Canidate_Votes_K_1 = 0 }
    set_variable = { RUS.National_Canidate_Votes_K_2 = 0 }
    set_variable = { RUS.National_Canidate_Votes_K_3 = 0 }
    set_variable = { RUS.National_Canidate_Votes_K_4 = 0 }
    set_variable = { RUS.National_Canidate_Votes_K_5 = 0 }
    set_variable = { RUS.National_Canidate_Votes_K_6 = 0 }
    set_variable = { RUS.National_Canidate_Votes_K_7 = 0 }
    set_variable = { RUS.National_Canidate_Votes_K_8 = 0 }
    set_variable = { RUS.National_Canidate_Votes_K_9 = 0 }
    every_owned_state = {
        limit = {
            check_variable = {
                Federal_Status > 0
            }
        }
        set_variable = { Regional_Canidate_Support_Percentage^0 = Canidate_Support^0 }
        set_variable = { Regional_Canidate_Support_Percentage^1 = Canidate_Support^1 }
        set_variable = { Regional_Canidate_Support_Percentage^2 = Canidate_Support^2 }
        set_variable = { Regional_Canidate_Support_Percentage^3 = Canidate_Support^3 }
        set_variable = { Regional_Canidate_Support_Percentage^4 = Canidate_Support^4 }
        set_variable = { Regional_Canidate_Support_Percentage^5 = Canidate_Support^5 }
        set_variable = { Regional_Canidate_Support_Percentage^6 = Canidate_Support^6 }
        set_variable = { Regional_Canidate_Support_Percentage^7 = Canidate_Support^7 }
        set_variable = { Regional_Canidate_Support_Percentage^8 = Canidate_Support^8 }
        set_variable = { Regional_Canidate_Support_Percentage^9 = Canidate_Support^9 }

        add_to_variable = { Regional_total_rus_election_support = Regional_Canidate_Support_Percentage^0 }
        add_to_variable = { Regional_total_rus_election_support = Regional_Canidate_Support_Percentage^1 }
        add_to_variable = { Regional_total_rus_election_support = Regional_Canidate_Support_Percentage^2 }
        add_to_variable = { Regional_total_rus_election_support = Regional_Canidate_Support_Percentage^3 }
        add_to_variable = { Regional_total_rus_election_support = Regional_Canidate_Support_Percentage^4 }
        add_to_variable = { Regional_total_rus_election_support = Regional_Canidate_Support_Percentage^5 }
        add_to_variable = { Regional_total_rus_election_support = Regional_Canidate_Support_Percentage^6 }
        add_to_variable = { Regional_total_rus_election_support = Regional_Canidate_Support_Percentage^7 }
        add_to_variable = { Regional_total_rus_election_support = Regional_Canidate_Support_Percentage^8 }
        add_to_variable = { Regional_total_rus_election_support = Regional_Canidate_Support_Percentage^9 }

        divide_variable = { Regional_Canidate_Support_Percentage^0 = Regional_total_rus_election_support }
        divide_variable = { Regional_Canidate_Support_Percentage^1 = Regional_total_rus_election_support }
        divide_variable = { Regional_Canidate_Support_Percentage^2 = Regional_total_rus_election_support }
        divide_variable = { Regional_Canidate_Support_Percentage^3 = Regional_total_rus_election_support }
        divide_variable = { Regional_Canidate_Support_Percentage^4 = Regional_total_rus_election_support }
        divide_variable = { Regional_Canidate_Support_Percentage^5 = Regional_total_rus_election_support }
        divide_variable = { Regional_Canidate_Support_Percentage^6 = Regional_total_rus_election_support }
        divide_variable = { Regional_Canidate_Support_Percentage^7 = Regional_total_rus_election_support }
        divide_variable = { Regional_Canidate_Support_Percentage^8 = Regional_total_rus_election_support }
        divide_variable = { Regional_Canidate_Support_Percentage^9 = Regional_total_rus_election_support }

        set_variable = {
            local_vote_total_K = Eligible_Voters_K
        }
        multiply_variable = {
            local_vote_total_K = Turnout_Percentage
        }
        multiply_variable = { Regional_Canidate_Support_Percentage^0 = local_vote_total_K }
        multiply_variable = { Regional_Canidate_Support_Percentage^1 = local_vote_total_K }
        multiply_variable = { Regional_Canidate_Support_Percentage^2 = local_vote_total_K }
        multiply_variable = { Regional_Canidate_Support_Percentage^3 = local_vote_total_K }
        multiply_variable = { Regional_Canidate_Support_Percentage^4 = local_vote_total_K }
        multiply_variable = { Regional_Canidate_Support_Percentage^5 = local_vote_total_K }
        multiply_variable = { Regional_Canidate_Support_Percentage^6 = local_vote_total_K }
        multiply_variable = { Regional_Canidate_Support_Percentage^7 = local_vote_total_K }
        multiply_variable = { Regional_Canidate_Support_Percentage^8 = local_vote_total_K }
        multiply_variable = { Regional_Canidate_Support_Percentage^9 = local_vote_total_K }

        add_to_variable = { RUS.National_Canidate_Votes_K_0 = Regional_Canidate_Support_Percentage^0 }
        add_to_variable = { RUS.National_Canidate_Votes_K_1 = Regional_Canidate_Support_Percentage^1 }
        add_to_variable = { RUS.National_Canidate_Votes_K_2 = Regional_Canidate_Support_Percentage^2 }
        add_to_variable = { RUS.National_Canidate_Votes_K_3 = Regional_Canidate_Support_Percentage^3 }
        add_to_variable = { RUS.National_Canidate_Votes_K_4 = Regional_Canidate_Support_Percentage^4 }
        add_to_variable = { RUS.National_Canidate_Votes_K_5 = Regional_Canidate_Support_Percentage^5 }
        add_to_variable = { RUS.National_Canidate_Votes_K_6 = Regional_Canidate_Support_Percentage^6 }
        add_to_variable = { RUS.National_Canidate_Votes_K_7 = Regional_Canidate_Support_Percentage^7 }
        add_to_variable = { RUS.National_Canidate_Votes_K_8 = Regional_Canidate_Support_Percentage^8 }
        add_to_variable = { RUS.National_Canidate_Votes_K_9 = Regional_Canidate_Support_Percentage^9 }
    }
    set_variable = { RUS.projected_total_national_votes = 0 }
    add_to_variable = { RUS.projected_total_national_votes = RUS.National_Canidate_Votes_K_0 }
    add_to_variable = { RUS.projected_total_national_votes = RUS.National_Canidate_Votes_K_1 }
    add_to_variable = { RUS.projected_total_national_votes = RUS.National_Canidate_Votes_K_2 }
    add_to_variable = { RUS.projected_total_national_votes = RUS.National_Canidate_Votes_K_3 }
    add_to_variable = { RUS.projected_total_national_votes = RUS.National_Canidate_Votes_K_4 }
    add_to_variable = { RUS.projected_total_national_votes = RUS.National_Canidate_Votes_K_5 }
    add_to_variable = { RUS.projected_total_national_votes = RUS.National_Canidate_Votes_K_6 }
    add_to_variable = { RUS.projected_total_national_votes = RUS.National_Canidate_Votes_K_7 }
    add_to_variable = { RUS.projected_total_national_votes = RUS.National_Canidate_Votes_K_8 }
    add_to_variable = { RUS.projected_total_national_votes = RUS.National_Canidate_Votes_K_9 }

    divide_variable = { RUS.National_Canidate_Votes_K_0 = RUS.projected_total_national_votes }
    divide_variable = { RUS.National_Canidate_Votes_K_1 = RUS.projected_total_national_votes }
    divide_variable = { RUS.National_Canidate_Votes_K_2 = RUS.projected_total_national_votes }
    divide_variable = { RUS.National_Canidate_Votes_K_3 = RUS.projected_total_national_votes }
    divide_variable = { RUS.National_Canidate_Votes_K_4 = RUS.projected_total_national_votes }
    divide_variable = { RUS.National_Canidate_Votes_K_5 = RUS.projected_total_national_votes }
    divide_variable = { RUS.National_Canidate_Votes_K_6 = RUS.projected_total_national_votes }
    divide_variable = { RUS.National_Canidate_Votes_K_7 = RUS.projected_total_national_votes }
    divide_variable = { RUS.National_Canidate_Votes_K_8 = RUS.projected_total_national_votes }
    divide_variable = { RUS.National_Canidate_Votes_K_9 = RUS.projected_total_national_votes }
}
#Actual Election Map Script
generate_campaign_map_russia = {
    set_variable = {
        number_of_canidates = Rus_Canidates^num
    }
    generate_national_election_polling = yes
    every_owned_state = {
        limit = {
            check_variable = {
                Federal_Status > 0
            }
        }
        set_variable = {
            total_rus_election_support = 0
        }
        set_variable = { Canidate_Support_Percentage^0 = Canidate_Support^0 }
        set_variable = { Canidate_Support_Percentage^1 = Canidate_Support^1 }
        set_variable = { Canidate_Support_Percentage^2 = Canidate_Support^2 }
        set_variable = { Canidate_Support_Percentage^3 = Canidate_Support^3 }
        set_variable = { Canidate_Support_Percentage^4 = Canidate_Support^4 }
        set_variable = { Canidate_Support_Percentage^5 = Canidate_Support^5 }
        set_variable = { Canidate_Support_Percentage^6 = Canidate_Support^6 }
        set_variable = { Canidate_Support_Percentage^7 = Canidate_Support^7 }
        set_variable = { Canidate_Support_Percentage^8 = Canidate_Support^8 }
        set_variable = { Canidate_Support_Percentage^9 = Canidate_Support^9 }

        add_to_variable = { total_rus_election_support = Canidate_Support_Percentage^0 }
        add_to_variable = { total_rus_election_support = Canidate_Support_Percentage^1 }
        add_to_variable = { total_rus_election_support = Canidate_Support_Percentage^2 }
        add_to_variable = { total_rus_election_support = Canidate_Support_Percentage^3 }
        add_to_variable = { total_rus_election_support = Canidate_Support_Percentage^4 }
        add_to_variable = { total_rus_election_support = Canidate_Support_Percentage^5 }
        add_to_variable = { total_rus_election_support = Canidate_Support_Percentage^6 }
        add_to_variable = { total_rus_election_support = Canidate_Support_Percentage^7 }
        add_to_variable = { total_rus_election_support = Canidate_Support_Percentage^8 }
        add_to_variable = { total_rus_election_support = Canidate_Support_Percentage^9 }

        divide_variable = { Canidate_Support_Percentage^0 = total_rus_election_support }
        divide_variable = { Canidate_Support_Percentage^1 = total_rus_election_support }
        divide_variable = { Canidate_Support_Percentage^2 = total_rus_election_support }
        divide_variable = { Canidate_Support_Percentage^3 = total_rus_election_support }
        divide_variable = { Canidate_Support_Percentage^4 = total_rus_election_support }
        divide_variable = { Canidate_Support_Percentage^5 = total_rus_election_support }
        divide_variable = { Canidate_Support_Percentage^6 = total_rus_election_support }
        divide_variable = { Canidate_Support_Percentage^7 = total_rus_election_support }
        divide_variable = { Canidate_Support_Percentage^8 = total_rus_election_support }
        divide_variable = { Canidate_Support_Percentage^9 = total_rus_election_support }

        if = {
            limit = {
                #check_variable = { Canidate_Support_Percentage^1 > Canidate_Support_Percentage^1 }
                check_variable = { Canidate_Support_Percentage^1 > Canidate_Support_Percentage^2 }
                check_variable = { Canidate_Support_Percentage^1 > Canidate_Support_Percentage^3 }
                check_variable = { Canidate_Support_Percentage^1 > Canidate_Support_Percentage^4 }
                check_variable = { Canidate_Support_Percentage^1 > Canidate_Support_Percentage^5 }
                check_variable = { Canidate_Support_Percentage^1 > Canidate_Support_Percentage^6 }
                check_variable = { Canidate_Support_Percentage^1 > Canidate_Support_Percentage^7 }
                check_variable = { Canidate_Support_Percentage^1 > Canidate_Support_Percentage^8 }
                check_variable = { Canidate_Support_Percentage^1 > Canidate_Support_Percentage^9 }              
            }
            set_variable = { 
                Rus_Election_Frame = RUS.Rus_Candidates_Color^0
            }
        }
        else_if = {
            limit = {
                check_variable = { Canidate_Support_Percentage^2 > Canidate_Support_Percentage^1 }
                #check_variable = { Canidate_Support_Percentage^2 > Canidate_Support_Percentage^2 }
                check_variable = { Canidate_Support_Percentage^2 > Canidate_Support_Percentage^3 }
                check_variable = { Canidate_Support_Percentage^2 > Canidate_Support_Percentage^4 }
                check_variable = { Canidate_Support_Percentage^2 > Canidate_Support_Percentage^5 }
                check_variable = { Canidate_Support_Percentage^2 > Canidate_Support_Percentage^6 }
                check_variable = { Canidate_Support_Percentage^2 > Canidate_Support_Percentage^7 }
                check_variable = { Canidate_Support_Percentage^2 > Canidate_Support_Percentage^8 }
                check_variable = { Canidate_Support_Percentage^2 > Canidate_Support_Percentage^9 }              
            }
            set_variable = { 
                Rus_Election_Frame = RUS.Rus_Candidates_Color^1
            }

        }
        else_if = {
            limit = {
                check_variable = { Canidate_Support_Percentage^3 > Canidate_Support_Percentage^1 }
                check_variable = { Canidate_Support_Percentage^3 > Canidate_Support_Percentage^2 }
                check_variable = { Canidate_Support_Percentage^3 > Canidate_Support_Percentage^4 }
                check_variable = { Canidate_Support_Percentage^3 > Canidate_Support_Percentage^5 }
                check_variable = { Canidate_Support_Percentage^3 > Canidate_Support_Percentage^6 }
                check_variable = { Canidate_Support_Percentage^3 > Canidate_Support_Percentage^7 }
                check_variable = { Canidate_Support_Percentage^3 > Canidate_Support_Percentage^8 }
                check_variable = { Canidate_Support_Percentage^3 > Canidate_Support_Percentage^9 }              
            }
            set_variable = { 
                Rus_Election_Frame = RUS.Rus_Candidates_Color^2
            }
        }
        else_if = {
            limit = {
                check_variable = { Canidate_Support_Percentage^4 > Canidate_Support_Percentage^1 }
                check_variable = { Canidate_Support_Percentage^4 > Canidate_Support_Percentage^2 }
                check_variable = { Canidate_Support_Percentage^4 > Canidate_Support_Percentage^3 }
                check_variable = { Canidate_Support_Percentage^4 > Canidate_Support_Percentage^5 }
                check_variable = { Canidate_Support_Percentage^4 > Canidate_Support_Percentage^6 }
                check_variable = { Canidate_Support_Percentage^4 > Canidate_Support_Percentage^7 }
                check_variable = { Canidate_Support_Percentage^4 > Canidate_Support_Percentage^8 }
                check_variable = { Canidate_Support_Percentage^4 > Canidate_Support_Percentage^9 }              
            }
            set_variable = { 
                Rus_Election_Frame = RUS.Rus_Candidates_Color^3
            }
        }
        else_if = {
            limit = {
                check_variable = { Canidate_Support_Percentage^5 > Canidate_Support_Percentage^1 }
                check_variable = { Canidate_Support_Percentage^5 > Canidate_Support_Percentage^2 }
                check_variable = { Canidate_Support_Percentage^5 > Canidate_Support_Percentage^3 }
                check_variable = { Canidate_Support_Percentage^5 > Canidate_Support_Percentage^4 }
                check_variable = { Canidate_Support_Percentage^5 > Canidate_Support_Percentage^6 }
                check_variable = { Canidate_Support_Percentage^5 > Canidate_Support_Percentage^7 }
                check_variable = { Canidate_Support_Percentage^5 > Canidate_Support_Percentage^8 }
                check_variable = { Canidate_Support_Percentage^5 > Canidate_Support_Percentage^9 }              
            }
            set_variable = { 
                Rus_Election_Frame = RUS.Rus_Candidates_Color^4
            }
        }
        else_if = {
            limit = {
                check_variable = { Canidate_Support_Percentage^6 > Canidate_Support_Percentage^1 }
                check_variable = { Canidate_Support_Percentage^6 > Canidate_Support_Percentage^2 }
                check_variable = { Canidate_Support_Percentage^6 > Canidate_Support_Percentage^3 }
                check_variable = { Canidate_Support_Percentage^6 > Canidate_Support_Percentage^4 }
                check_variable = { Canidate_Support_Percentage^6 > Canidate_Support_Percentage^5 }
                check_variable = { Canidate_Support_Percentage^6 > Canidate_Support_Percentage^7 }
                check_variable = { Canidate_Support_Percentage^6 > Canidate_Support_Percentage^8 }
                check_variable = { Canidate_Support_Percentage^6 > Canidate_Support_Percentage^9 }              
            }
            set_variable = { 
                Rus_Election_Frame = RUS.Rus_Candidates_Color^5
            }
        }
        else_if = {
            limit = {
                check_variable = { Canidate_Support_Percentage^7 > Canidate_Support_Percentage^1 }
                check_variable = { Canidate_Support_Percentage^7 > Canidate_Support_Percentage^2 }
                check_variable = { Canidate_Support_Percentage^7 > Canidate_Support_Percentage^3 }
                check_variable = { Canidate_Support_Percentage^7 > Canidate_Support_Percentage^4 }
                check_variable = { Canidate_Support_Percentage^7 > Canidate_Support_Percentage^5 }
                check_variable = { Canidate_Support_Percentage^7 > Canidate_Support_Percentage^6 }
                check_variable = { Canidate_Support_Percentage^7 > Canidate_Support_Percentage^8 }
                check_variable = { Canidate_Support_Percentage^7 > Canidate_Support_Percentage^9 }              
            }
            set_variable = { 
                Rus_Election_Frame = RUS.Rus_Candidates_Color^6
            }
        }
        else_if = {
            limit = {
                check_variable = { Canidate_Support_Percentage^8 > Canidate_Support_Percentage^1 }
                check_variable = { Canidate_Support_Percentage^8 > Canidate_Support_Percentage^2 }
                check_variable = { Canidate_Support_Percentage^8 > Canidate_Support_Percentage^3 }
                check_variable = { Canidate_Support_Percentage^8 > Canidate_Support_Percentage^4 }
                check_variable = { Canidate_Support_Percentage^8 > Canidate_Support_Percentage^5 }
                check_variable = { Canidate_Support_Percentage^8 > Canidate_Support_Percentage^6 }
                check_variable = { Canidate_Support_Percentage^8 > Canidate_Support_Percentage^7 }
                check_variable = { Canidate_Support_Percentage^8 > Canidate_Support_Percentage^9 }              
            }
            set_variable = { 
                Rus_Election_Frame = RUS.Rus_Candidates_Color^7
            }
        }
        else_if = {
            limit = {
                check_variable = { Canidate_Support_Percentage^9 > Canidate_Support_Percentage^1 }
                check_variable = { Canidate_Support_Percentage^9 > Canidate_Support_Percentage^2 }
                check_variable = { Canidate_Support_Percentage^9 > Canidate_Support_Percentage^3 }
                check_variable = { Canidate_Support_Percentage^9 > Canidate_Support_Percentage^4 }
                check_variable = { Canidate_Support_Percentage^9 > Canidate_Support_Percentage^5 }
                check_variable = { Canidate_Support_Percentage^9 > Canidate_Support_Percentage^6 }
                check_variable = { Canidate_Support_Percentage^9 > Canidate_Support_Percentage^7 }
                check_variable = { Canidate_Support_Percentage^9 > Canidate_Support_Percentage^8 }
            }
            set_variable = { 
                Rus_Election_Frame = RUS.Rus_Candidates_Color^8
            }
        }
        else = {
            set_variable = { 
                Rus_Election_Frame = RUS.Rus_Candidates_Color^9
            }          
        }
        clear_array = canidate_listing_array_percentage
        clear_array = canidate_listing_array
        if = {
            limit = {
                check_variable = {
                    Canidate_Support_Percentage^1 > 0
                }
            }
            add_to_array = { canidate_listing_array_percentage = Canidate_Support_Percentage^1 } 
            add_to_array = { canidate_listing_array = RUS.Rus_Canidates^0 } 
        }
        if = {
            limit = {
                check_variable = {
                    Canidate_Support_Percentage^2 > 0
                }
            }
            add_to_array = { canidate_listing_array_percentage = Canidate_Support_Percentage^2 } 
            add_to_array = { canidate_listing_array = RUS.Rus_Canidates^1 } 
        }
        if = {
            limit = {
                check_variable = {
                    Canidate_Support_Percentage^3 > 0
                }
            }
            add_to_array = { canidate_listing_array_percentage = Canidate_Support_Percentage^3 } 
            add_to_array = { canidate_listing_array = RUS.Rus_Canidates^2 } 
        }
        if = {
            limit = {
                check_variable = {
                    Canidate_Support_Percentage^4 > 0
                }
            }
            add_to_array = { canidate_listing_array_percentage = Canidate_Support_Percentage^4 } 
            add_to_array = { canidate_listing_array = RUS.Rus_Canidates^3 } 
        }
        if = {
            limit = {
                check_variable = {
                    Canidate_Support_Percentage^5 > 0
                }
            }
            add_to_array = { canidate_listing_array_percentage = Canidate_Support_Percentage^5 } 
            add_to_array = { canidate_listing_array = RUS.Rus_Canidates^4 } 
        }
        if = {
            limit = {
                check_variable = {
                    Canidate_Support_Percentage^6 > 0
                }
            }
            add_to_array = { canidate_listing_array_percentage = Canidate_Support_Percentage^6 } 
            add_to_array = { canidate_listing_array = RUS.Rus_Canidates^5 } 
        }
        if = {
            limit = {
                check_variable = {
                    Canidate_Support_Percentage^7 > 0
                }
            }
            add_to_array = { canidate_listing_array_percentage = Canidate_Support_Percentage^7 } 
            add_to_array = { canidate_listing_array = RUS.Rus_Canidates^6 } 
        }
        if = {
            limit = {
                check_variable = {
                    Canidate_Support_Percentage^8 > 0
                }
            }
            add_to_array = { canidate_listing_array_percentage = Canidate_Support_Percentage^8 } 
            add_to_array = { canidate_listing_array = RUS.Rus_Canidates^7 } 
        }
        if = {
            limit = {
                check_variable = {
                    Canidate_Support_Percentage^9 > 0
                }
            }
            add_to_array = { canidate_listing_array_percentage = Canidate_Support_Percentage^9 } 
            add_to_array = { canidate_listing_array = RUS.Rus_Canidates^8 } 
        }
        for_loop_effect = {
            end = canidate_listing_array_percentage^num
            value = v
            find_highest_in_array = {
                array = canidate_listing_array_percentage
                value = max
                index = max_index
            }
            multiply_variable = {
                canidate_listing_array_percentage^v = 100
            }
            round_variable = canidate_listing_array_percentage^v
        }


        # Creation of temp arrays.
        # The arrays are "copied" from canidate_listing_array and canidate_listing_array_percentage for sorting
        resize_temp_array = {
            array = canidate_listing_array_percentage_temp
            size = canidate_listing_array_percentage^num
        }
        resize_temp_array = {
            array = canidate_listing_array_temp
            size = canidate_listing_array_percentage^num
        }
        # Sort the values by largest support
        for_loop_effect = {
            end = canidate_listing_array_percentage^num
            value = v
            find_highest_in_array = {
                array = canidate_listing_array_percentage
                value = max
                index = max_index
            }
            set_temp_variable = { canidate_listing_array_percentage_temp^v = max } #sets biggest at the earliest available position
            set_temp_variable = { canidate_listing_array_temp^v = canidate_listing_array^max_index } #sets biggest TAG at the earliest available position
            set_variable = { canidate_listing_array_percentage^max_index = -1 } #removes it from selection
        }

        # Clears the Values
        clear_array = canidate_listing_array_percentage
        clear_array = canidate_listing_array

        set_temp_variable = { influence_total = 0 }
        # Restores destroyed arrays in the above process - i.e. if they were deleted due to being less then 1%
        for_each_loop = {
            array = canidate_listing_array_percentage_temp
            add_to_array = { canidate_listing_array_percentage = v }
            add_to_temp_variable = { influence_total = v }
        }
        for_each_loop = {
            array = canidate_listing_array_temp
            add_to_array = { canidate_listing_array = v }
        }
        clear_temp_array = canidate_listing_array_percentage_temp
        clear_temp_array = canidate_listing_array_temp
    }
}

RUS_1991_Presidential_Eleciton_Startup = {
    Yeltsin_Campaign_Launch = yes
    Ryzhkov_Campaign_Launch = yes
    Zhirinovsky_Campaign_Launch = yes
    Tuleyev_Campaign_Launch = yes
    Makashov_Campaign_Launch = yes
    Bakatin_Campaign_Launch = yes
    for_loop_effect = {
        end = Rus_Charsima_Score^num
        value = v
        set_variable = {
            Rus_Activity_Points^v = Rus_Charsima_Score^v
        }
    }
    Add_New_Union_Treaty_Key_Issue = yes
    Add_Perestroika_Key_Issue = yes
    Add_Gorbachav_Key_Issue = yes
    add_Local_Autonomy_Key_Issue = yes
    add_Local_Soveriegnty_Key_Issue = yes
    add_Islamic_Rights_Key_Issue = yes
    add_Restoration_of_Churches_Key_Issue = yes
    add_Miner_Conflict_Key_Issue = yes
    add_Military_Industrial_Spending_Key_Issue = yes
    add_Fate_of_the_Soviet_Army_Key_Issue = yes
    add_Russian_Nationalism_Key_Issue = yes

    #Media and Startup Stuff 
    Calender_Function_Test_RUS = yes
    activate_mission = Russia_Election_1991_Round_One
    activate_mission = The_Media_Cycle_RUS
}
Calender_Function_Test_RUS = {
    set_variable = {
        current_media_cycle_start = global.num_days
    }
    add_to_variable = {
        current_media_cycle_start = 1    #Date Format Fix
    }
    set_variable = {
        next_media_cycle_start = current_media_cycle_start
    }
    add_to_variable = {
        next_media_cycle_start = 4    
    }
    set_variable = {
        second_next_media_cycle_start = next_media_cycle_start
    }
    add_to_variable = {
        second_next_media_cycle_start = 4    
    }

    modulo_variable = {
        var = current_media_cycle_start
        value = 365
    }
    modulo_variable = {
        var = next_media_cycle_start
        value = 365
    }
    modulo_variable = {
        var = second_next_media_cycle_start
        value = 365
    }
    #December
    if = {
        limit = {
            check_variable = {
                current_media_cycle_start > 334
            }
        }
        set_variable = {
            current_media_cycle_start_month = 12
        }
        add_to_variable = {
            current_media_cycle_start = -334
        }              
    }
    #November
    else_if = {
        limit = {
            check_variable = {
                current_media_cycle_start > 304
            }
        }
        set_variable = {
            current_media_cycle_start_month = 11
        }
        add_to_variable = {
            current_media_cycle_start = -304
        }              
    }
    #October
    else_if = {
        limit = {
            check_variable = {
                current_media_cycle_start > 273
            }
        }
        set_variable = {
            current_media_cycle_start_month = 10
        }
        add_to_variable = {
            current_media_cycle_start = -273
        }              
    }
    #September
    else_if = {
        limit = {
            check_variable = {
                current_media_cycle_start > 243
            }
        }
        set_variable = {
            current_media_cycle_start_month = 9
        }
        add_to_variable = {
            current_media_cycle_start = -243
        }              
    }
    #August
    else_if = {
        limit = {
            check_variable = {
                current_media_cycle_start > 212
            }
        }
        set_variable = {
            current_media_cycle_start_month = 8
        }
        add_to_variable = {
            current_media_cycle_start = -212
        }              
    }
    #July
    else_if = {
        limit = {
            check_variable = {
                current_media_cycle_start > 181
            }
        }
        set_variable = {
            current_media_cycle_start_month = 7
        }
        add_to_variable = {
            current_media_cycle_start = -181
        }              
    }
    #June
    else_if = {
        limit = {
            check_variable = {
                current_media_cycle_start > 151
            }
        }
        set_variable = {
            current_media_cycle_start_month = 6
        }
        add_to_variable = {
            current_media_cycle_start = -151
        }              
    }
    #May
    else_if = {
        limit = {
            check_variable = {
                current_media_cycle_start > 120
            }
        }
        set_variable = {
            current_media_cycle_start_month = 5
        }
        add_to_variable = {
            current_media_cycle_start = -120
        }              
    }
    #April
    else_if = {
        limit = {
            check_variable = {
                current_media_cycle_start > 90
            }
        }
        set_variable = {
            current_media_cycle_start_month = 7
        }
        add_to_variable = {
            current_media_cycle_start = -90
        }              
    }
    #March
    else_if = {
        limit = {
            check_variable = {
                current_media_cycle_start > 59
            }
        }
        set_variable = {
            current_media_cycle_start_month = 3
        }
        add_to_variable = {
            current_media_cycle_start = -59
        }              
    }
    #February
    else_if = {
        limit = {
            check_variable = {
                current_media_cycle_start > 31
            }
        }
        set_variable = {
            current_media_cycle_start_month = 2
        }
        add_to_variable = {
            current_media_cycle_start = -31
        }              
    }
    #January
    else = {
        set_variable = {
            current_media_cycle_start_month = 1
        }
    }
    #Other 2
    add_political_power = 2
    #December
    if = {
        limit = {
            check_variable = {
                next_media_cycle_start > 334
            }
        }
        set_variable = {
            next_media_cycle_start_month = 12
        }
        add_to_variable = {
            next_media_cycle_start = -334
        }              
    }
    #November
    else_if = {
        limit = {
            check_variable = {
                next_media_cycle_start > 304
            }
        }
        set_variable = {
            next_media_cycle_start_month = 11
        }
        add_to_variable = {
            next_media_cycle_start = -304
        }              
    }
    #October
    else_if = {
        limit = {
            check_variable = {
                next_media_cycle_start > 273
            }
        }
        set_variable = {
            next_media_cycle_start_month = 10
        }
        add_to_variable = {
            next_media_cycle_start = -273
        }              
    }
    #September
    else_if = {
        limit = {
            check_variable = {
                next_media_cycle_start > 243
            }
        }
        set_variable = {
            next_media_cycle_start_month = 9
        }
        add_to_variable = {
            next_media_cycle_start = -243
        }              
    }
    #August
    else_if = {
        limit = {
            check_variable = {
                next_media_cycle_start > 212
            }
        }
        set_variable = {
            next_media_cycle_start_month = 8
        }
        add_to_variable = {
            next_media_cycle_start = -212
        }              
    }
    #July
    else_if = {
        limit = {
            check_variable = {
                next_media_cycle_start > 181
            }
        }
        set_variable = {
            next_media_cycle_start_month = 7
        }
        add_to_variable = {
            next_media_cycle_start = -181
        }              
    }
    #June
    else_if = {
        limit = {
            check_variable = {
                next_media_cycle_start > 151
            }
        }
        set_variable = {
            next_media_cycle_start_month = 6
        }
        add_to_variable = {
            next_media_cycle_start = -151
        }              
    }
    #May
    else_if = {
        limit = {
            check_variable = {
                next_media_cycle_start > 120
            }
        }
        set_variable = {
            next_media_cycle_start_month = 5
        }
        add_to_variable = {
            next_media_cycle_start = -120
        }              
    }
    #April
    else_if = {
        limit = {
            check_variable = {
                next_media_cycle_start > 90
            }
        }
        set_variable = {
            next_media_cycle_start_month = 7
        }
        add_to_variable = {
            next_media_cycle_start = -90
        }              
    }
    #March
    else_if = {
        limit = {
            check_variable = {
                next_media_cycle_start > 59
            }
        }
        set_variable = {
            next_media_cycle_start_month = 3
        }
        add_to_variable = {
            next_media_cycle_start = -59
        }              
    }
    #February
    else_if = {
        limit = {
            check_variable = {
                next_media_cycle_start > 31
            }
        }
        set_variable = {
            next_media_cycle_start_month = 2
        }
        add_to_variable = {
            next_media_cycle_start = -31
        }              
    }
    #January
    else = {
        set_variable = {
            next_media_cycle_start_month = 1
        }
    }
    #December
    if = {
        limit = {
            check_variable = {
                second_next_media_cycle_start > 334
            }
        }
        set_variable = {
            second_next_media_cycle_start_month = 12
        }
        add_to_variable = {
            second_next_media_cycle_start = -334
        }              
    }
    #November
    else_if = {
        limit = {
            check_variable = {
                second_next_media_cycle_start > 304
            }
        }
        set_variable = {
            second_next_media_cycle_start_month = 11
        }
        add_to_variable = {
            second_next_media_cycle_start = -304
        }              
    }
    #October
    else_if = {
        limit = {
            check_variable = {
                second_next_media_cycle_start > 273
            }
        }
        set_variable = {
            second_next_media_cycle_start_month = 10
        }
        add_to_variable = {
            second_next_media_cycle_start = -273
        }              
    }
    #September
    else_if = {
        limit = {
            check_variable = {
                second_next_media_cycle_start > 243
            }
        }
        set_variable = {
            second_next_media_cycle_start_month = 9
        }
        add_to_variable = {
            second_next_media_cycle_start = -243
        }              
    }
    #August
    else_if = {
        limit = {
            check_variable = {
                second_next_media_cycle_start > 212
            }
        }
        set_variable = {
            second_next_media_cycle_start_month = 8
        }
        add_to_variable = {
            second_next_media_cycle_start = -212
        }              
    }
    #July
    else_if = {
        limit = {
            check_variable = {
                second_next_media_cycle_start > 181
            }
        }
        set_variable = {
            second_next_media_cycle_start_month = 7
        }
        add_to_variable = {
            second_next_media_cycle_start = -181
        }              
    }
    #June
    else_if = {
        limit = {
            check_variable = {
                second_next_media_cycle_start > 151
            }
        }
        set_variable = {
            second_next_media_cycle_start_month = 6
        }
        add_to_variable = {
            second_next_media_cycle_start = -151
        }              
    }
    #May
    else_if = {
        limit = {
            check_variable = {
                second_next_media_cycle_start > 120
            }
        }
        set_variable = {
            second_next_media_cycle_start_month = 5
        }
        add_to_variable = {
            second_next_media_cycle_start = -120
        }              
    }
    #April
    else_if = {
        limit = {
            check_variable = {
                second_next_media_cycle_start > 90
            }
        }
        set_variable = {
            second_next_media_cycle_start_month = 7
        }
        add_to_variable = {
            second_next_media_cycle_start = -90
        }              
    }
    #March
    else_if = {
        limit = {
            check_variable = {
                second_next_media_cycle_start > 59
            }
        }
        set_variable = {
            second_next_media_cycle_start_month = 3
        }
        add_to_variable = {
            second_next_media_cycle_start = -59
        }              
    }
    #February
    else_if = {
        limit = {
            check_variable = {
                second_next_media_cycle_start > 31
            }
        }
        set_variable = {
            second_next_media_cycle_start_month = 2
        }
        add_to_variable = {
            second_next_media_cycle_start = -31
        }              
    }
    #January
    else = {
        set_variable = {
            second_next_media_cycle_start_month = 1
        }
    }

}

setup_1991_Russia_Campaign_Issues_Debug = {
    Add_New_Union_Treaty_Key_Issue = yes
    Add_Perestroika_Key_Issue = yes
    Add_Gorbachav_Key_Issue = yes
    add_Local_Autonomy_Key_Issue = yes
    add_Local_Soveriegnty_Key_Issue = yes
    add_Islamic_Rights_Key_Issue = yes
    add_Restoration_of_Churches_Key_Issue = yes
    add_Miner_Conflict_Key_Issue = yes
    add_Military_Industrial_Spending_Key_Issue = yes
    add_Fate_of_the_Soviet_Army_Key_Issue = yes
    add_Russian_Nationalism_Key_Issue = yes
}
RUS_Switch_View_to_Election = {
    set_variable = { RUS_Russia_Map_Status = 1 }
    every_owned_state = {
        set_variable = {
            MAP_STATUS = Rus_Election_Frame
        }
    }
}
RUS_Switch_View_to_Status = {
    set_variable = { RUS_Russia_Map_Status = 0 }
    every_owned_state = {
        set_variable = {
            MAP_STATUS = Federal_Status
        }
    }
}
#Russian Key Issues
Add_New_Union_Treaty_Key_Issue = {
    RUS = {
        every_owned_state = {
            if = {
                limit = {
                    Urban_Russia = yes
                }
                add_to_array = { RUS_KI_Issue_Topic = 1 } add_to_array = { RUS_KI_Issue_Rating = 1 }
            }
            else_if = {
                limit = {
                    OR = {
                        Muslim_Majority_Republics_Russia = yes
                        Mongol_Republics_and_Okrugs_Russia = yes
                        All_Republics_Russia = yes
                        Autonomous_Okrugs_Russia = yes
                        Red_Belt_Russia = yes
                    }
                }
                add_to_array = { RUS_KI_Issue_Topic = 1 } add_to_array = { RUS_KI_Issue_Rating = 3 }
            }
            else = {
                add_to_array = { RUS_KI_Issue_Topic = 1 } add_to_array = { RUS_KI_Issue_Rating = 2 }
            }
        }
    }
}
Add_Perestroika_Key_Issue = {
    RUS = {
        every_owned_state = {
            if = {
                limit = {
                    Urban_Russia = yes
                }
                add_to_array = { RUS_KI_Issue_Topic = 2 } add_to_array = { RUS_KI_Issue_Rating = 3 }
            }
            else_if = {
                limit = {
                    OR = {
                        Mongol_Republics_and_Okrugs_Russia = yes
                        Autonomous_Okrugs_Russia = yes
                        Red_Belt_Russia = yes
                        Agricultural_Region_Russia = yes
                    }
                }
                add_to_array = { RUS_KI_Issue_Topic = 2 } add_to_array = { RUS_KI_Issue_Rating = 1 }
            }
            else = {
                add_to_array = { RUS_KI_Issue_Topic = 2 } add_to_array = { RUS_KI_Issue_Rating = 2 }
            }
        }
    }
}
Add_Gorbachav_Key_Issue = {
    RUS = {
        every_owned_state = {
            if = {
                limit = {
                    OR = {
                        Urban_Russia = yes
                        Very_Orthodox_Russia = yes
                        state = 932
                        state = 265
                    }
                }
                add_to_array = { RUS_KI_Issue_Topic = 3 } add_to_array = { RUS_KI_Issue_Rating = 1 }
            }
            else_if = {
                limit = {
                    OR = {
                        Mongol_Republics_and_Okrugs_Russia = yes
                    }
                }
                add_to_array = { RUS_KI_Issue_Topic = 3 } add_to_array = { RUS_KI_Issue_Rating = 5 }
            }
            else_if = {
                limit = {
                    OR = {
                        Red_Belt_Russia = yes
                        state = 218
                        state = 329
                    }
                }
                add_to_array = { RUS_KI_Issue_Topic = 3 } add_to_array = { RUS_KI_Issue_Rating = 4 }
            }
            else_if = {
                limit = {
                    OR = {
                        All_Non_Muslim_Non_Mongol_Republics_Russia = yes
                        Agricultural_Region_Russia = yes
                    }
                    add_to_array = { RUS_KI_Issue_Topic = 3 } add_to_array = { RUS_KI_Issue_Rating = 3 }
                }
            }
            else = {
                add_to_array = { RUS_KI_Issue_Topic = 3 } add_to_array = { RUS_KI_Issue_Rating = 2 }
            }
        }
    }
}
add_Local_Autonomy_Key_Issue = {
    every_owned_state = {
        limit = {
            OR = {
                Autonomous_Okrugs_Russia = yes
                All_Republics_Russia = yes
            }
            NOT = { state = 651 }
            NOT = { state = 249 }
        }
        add_to_array = { RUS_KI_Issue_Topic = 4 } add_to_array = { RUS_KI_Issue_Rating = 1 }
    }
}
add_Local_Soveriegnty_Key_Issue = {
    add_to_array = { 651.RUS_KI_Issue_Topic = 5 } add_to_array = { 651.RUS_KI_Issue_Rating = 1 }
    add_to_array = { 249.RUS_KI_Issue_Topic = 5 } add_to_array = { 249.RUS_KI_Issue_Rating = 1 }
}
add_Islamic_Rights_Key_Issue = {
    every_owned_state = {
        limit = {
            Muslim_Majority_Republics_Russia = yes
        }
        add_to_array = { RUS_KI_Issue_Topic = 6 } add_to_array = { RUS_KI_Issue_Rating = 1 }
    }
}
add_Restoration_of_Churches_Key_Issue = {
    every_owned_state = {
        limit = {
            Very_Orthodox_Russia = yes
        }
        add_to_array = { RUS_KI_Issue_Topic = 7 } add_to_array = { RUS_KI_Issue_Rating = 1 }
    }
}
add_Miner_Conflict_Key_Issue = {
    every_owned_state = {
        limit = {
            Coal_Mining_Regions_Russia = yes
        }
        add_to_array = { RUS_KI_Issue_Topic = 8 } add_to_array = { RUS_KI_Issue_Rating = 1 }
    }
}
add_Military_Industrial_Spending_Key_Issue = {
    every_owned_state = {
        limit = {
            Military_Industrial_Regions_Russia = yes
        }
        add_to_array = { RUS_KI_Issue_Topic = 9 } add_to_array = { RUS_KI_Issue_Rating = 1 }
    }
}
add_Fate_of_the_Soviet_Army_Key_Issue = {
    every_owned_state = {
        limit = {
            Large_Military_Prescense_Russia = yes
        }
        add_to_array = { RUS_KI_Issue_Topic = 10 } add_to_array = { RUS_KI_Issue_Rating = 1 }
    }
}
add_Russian_Nationalism_Key_Issue = {
    every_owned_state = {
        limit = {
            OR = {
                Autonomous_Okrugs_Russia = yes
                All_Republics_Russia = yes
                LDPR_Stronger_Area_Russia = yes
                Very_Orthodox_Russia = yes
            }
        }
        if = {
            limit = {
                OR = {
                    Very_Orthodox_Russia = yes
                    LDPR_Stronger_Area_Russia = yes
                }
            }
            add_to_array = { RUS_KI_Issue_Topic = 11 } add_to_array = { RUS_KI_Issue_Rating = 2 }
        }
        else_if = {
            limit = {
                OR = {
                    Autonomous_Okrugs_Russia = yes
                    All_Republics_Russia = yes
                }
            }
            add_to_array = { RUS_KI_Issue_Topic = 11 } add_to_array = { RUS_KI_Issue_Rating = 1 }
        }
        else = { }
    }
}
Russia_Election_Cycle_Stat_Updates = {
    for_loop_effect = {
        end = Rus_Charsima_Score^num
        value = v
        set_variable = {
            Rus_Activity_Points^v = Rus_Charsima_Score^v
        }
        randomize_variable = {
            var = Fundraising_Weekly
            distribution = uniform
            min = 1
            max = 5
        }
        multiply_variable = {
            Fundraising_Weekly = Rus_Fundraising_Score^i
        }
        add_to_variable = {
            Rus_Campaign_Funds^v = Fundraising_Weekly
        }
    }
}
Russia_Ad_Position_Finder = {
    if = {
        limit = {
            check_variable = {
                RUS_election_ad_cycle_target^i = Rus_Canidates^0
            }
        }
        set_variable = {
            RUS_election_ad_cycle_target_position = 1
        }
    }
    else_if = {
        limit = {
            check_variable = {
                RUS_election_ad_cycle_target^i = Rus_Canidates^1
            }
        }
        set_variable = {
            RUS_election_ad_cycle_target_position = 2
        }       
    }
    else_if = {
        limit = {
            check_variable = {
                RUS_election_ad_cycle_target^i = Rus_Canidates^2
            }
        }
        set_variable = {
            RUS_election_ad_cycle_target_position = 3
        }
    }
    else_if = {
        limit = {
            check_variable = {
                RUS_election_ad_cycle_target^i = Rus_Canidates^3
            }
        }
        set_variable = {
            RUS_election_ad_cycle_target_position = 4
        }
    }
    else_if = {
        limit = {
            check_variable = {
                RUS_election_ad_cycle_target^i = Rus_Canidates^4
            }
        }
        set_variable = {
            RUS_election_ad_cycle_target_position = 5
        }
    }
    else_if = {
        limit = {
            check_variable = {
                RUS_election_ad_cycle_target^i = Rus_Canidates^5
            }
        }
        set_variable = {
            RUS_election_ad_cycle_target_position = 6
        }
    }
    else_if = {
        limit = {
            check_variable = {
                RUS_election_ad_cycle_target^i = Rus_Canidates^6
            }
        }
        set_variable = {
            RUS_election_ad_cycle_target_position = 7
        }
    }
    else_if = {
        limit = {
            check_variable = {
                RUS_election_ad_cycle_target^i = Rus_Canidates^7
            }
        }
        set_variable = {
            RUS_election_ad_cycle_target_position = 8
        }
    }
    else_if = {
        limit = {
            check_variable = {
                RUS_election_ad_cycle_target^i = Rus_Canidates^8
            }
        }
        set_variable = {
            RUS_election_ad_cycle_target_position = 9
        }
    }
}
Calculate_Election_Results = {
    set_variable = {
        number_of_canidates = Rus_Canidates^num
    }
    set_variable = { RUS.National_Canidate_Votes_K_0 = 0 }
    set_variable = { RUS.National_Canidate_Votes_K_1 = 0 }
    set_variable = { RUS.National_Canidate_Votes_K_2 = 0 }
    set_variable = { RUS.National_Canidate_Votes_K_3 = 0 }
    set_variable = { RUS.National_Canidate_Votes_K_4 = 0 }
    set_variable = { RUS.National_Canidate_Votes_K_5 = 0 }
    set_variable = { RUS.National_Canidate_Votes_K_6 = 0 }
    set_variable = { RUS.National_Canidate_Votes_K_7 = 0 }
    set_variable = { RUS.National_Canidate_Votes_K_8 = 0 }
    set_variable = { RUS.National_Canidate_Votes_K_9 = 0 }
    every_owned_state = {
        limit = {
            check_variable = {
                Federal_Status > 0
            }
        }
        set_variable = { Regional_Canidate_Support_Percentage^0 = Canidate_Support^0 }
        set_variable = { Regional_Canidate_Support_Percentage^1 = Canidate_Support^1 }
        set_variable = { Regional_Canidate_Support_Percentage^2 = Canidate_Support^2 }
        set_variable = { Regional_Canidate_Support_Percentage^3 = Canidate_Support^3 }
        set_variable = { Regional_Canidate_Support_Percentage^4 = Canidate_Support^4 }
        set_variable = { Regional_Canidate_Support_Percentage^5 = Canidate_Support^5 }
        set_variable = { Regional_Canidate_Support_Percentage^6 = Canidate_Support^6 }
        set_variable = { Regional_Canidate_Support_Percentage^7 = Canidate_Support^7 }
        set_variable = { Regional_Canidate_Support_Percentage^8 = Canidate_Support^8 }
        set_variable = { Regional_Canidate_Support_Percentage^9 = Canidate_Support^9 }

        add_to_variable = { Regional_total_rus_election_support = Regional_Canidate_Support_Percentage^0 }
        add_to_variable = { Regional_total_rus_election_support = Regional_Canidate_Support_Percentage^1 }
        add_to_variable = { Regional_total_rus_election_support = Regional_Canidate_Support_Percentage^2 }
        add_to_variable = { Regional_total_rus_election_support = Regional_Canidate_Support_Percentage^3 }
        add_to_variable = { Regional_total_rus_election_support = Regional_Canidate_Support_Percentage^4 }
        add_to_variable = { Regional_total_rus_election_support = Regional_Canidate_Support_Percentage^5 }
        add_to_variable = { Regional_total_rus_election_support = Regional_Canidate_Support_Percentage^6 }
        add_to_variable = { Regional_total_rus_election_support = Regional_Canidate_Support_Percentage^7 }
        add_to_variable = { Regional_total_rus_election_support = Regional_Canidate_Support_Percentage^8 }
        add_to_variable = { Regional_total_rus_election_support = Regional_Canidate_Support_Percentage^9 }

        divide_variable = { Regional_Canidate_Support_Percentage^0 = Regional_total_rus_election_support }
        divide_variable = { Regional_Canidate_Support_Percentage^1 = Regional_total_rus_election_support }
        divide_variable = { Regional_Canidate_Support_Percentage^2 = Regional_total_rus_election_support }
        divide_variable = { Regional_Canidate_Support_Percentage^3 = Regional_total_rus_election_support }
        divide_variable = { Regional_Canidate_Support_Percentage^4 = Regional_total_rus_election_support }
        divide_variable = { Regional_Canidate_Support_Percentage^5 = Regional_total_rus_election_support }
        divide_variable = { Regional_Canidate_Support_Percentage^6 = Regional_total_rus_election_support }
        divide_variable = { Regional_Canidate_Support_Percentage^7 = Regional_total_rus_election_support }
        divide_variable = { Regional_Canidate_Support_Percentage^8 = Regional_total_rus_election_support }
        divide_variable = { Regional_Canidate_Support_Percentage^9 = Regional_total_rus_election_support }

        if = {
            limit = {
                check_variable = { Regional_Canidate_Support_Percentage^0 > 4 }
            }
            randomize_variable = {
                var = Margin_of_Error
                distribution = uniform
                min = -4
                max = 4
            }
            add_to_variable = { Regional_Canidate_Support_Percentage^0 = Margin_of_Error }
        }
        if = {
            limit = {
                check_variable = { Regional_Canidate_Support_Percentage^1 > 4 }
            }
            randomize_variable = {
                var = Margin_of_Error
                distribution = uniform
                min = -4
                max = 4
            }
            add_to_variable = { Regional_Canidate_Support_Percentage^1 = Margin_of_Error }
        }
        if = {
            limit = {
                check_variable = { Regional_Canidate_Support_Percentage^2 > 4 }
            }
            randomize_variable = {
                var = Margin_of_Error
                distribution = uniform
                min = -4
                max = 4
            }
            add_to_variable = { Regional_Canidate_Support_Percentage^2 = Margin_of_Error }
        }
        if = {
            limit = {
                check_variable = { Regional_Canidate_Support_Percentage^3 > 4 }
            }
            randomize_variable = {
                var = Margin_of_Error
                distribution = uniform
                min = -4
                max = 4
            }
            add_to_variable = { Regional_Canidate_Support_Percentage^3 = Margin_of_Error }
        }
        if = {
            limit = {
                check_variable = { Regional_Canidate_Support_Percentage^4 > 4 }
            }
            randomize_variable = {
                var = Margin_of_Error
                distribution = uniform
                min = -4
                max = 4
            }
            add_to_variable = { Regional_Canidate_Support_Percentage^4 = Margin_of_Error }
        }
        if = {
            limit = {
                check_variable = { Regional_Canidate_Support_Percentage^5 > 4 }
            }
            randomize_variable = {
                var = Margin_of_Error
                distribution = uniform
                min = -4
                max = 4
            }
            add_to_variable = { Regional_Canidate_Support_Percentage^5 = Margin_of_Error }
        }
        if = {
            limit = {
                check_variable = { Regional_Canidate_Support_Percentage^6 > 4 }
            }
            randomize_variable = {
                var = Margin_of_Error
                distribution = uniform
                min = -4
                max = 4
            }
            add_to_variable = { Regional_Canidate_Support_Percentage^6 = Margin_of_Error }
        }
        if = {
            limit = {
                check_variable = { Regional_Canidate_Support_Percentage^7 > 4 }
            }
            randomize_variable = {
                var = Margin_of_Error
                distribution = uniform
                min = -4
                max = 4
            }
            add_to_variable = { Regional_Canidate_Support_Percentage^7 = Margin_of_Error }
        }
        if = {
            limit = {
                check_variable = { Regional_Canidate_Support_Percentage^8 > 4 }
            }
            randomize_variable = {
                var = Margin_of_Error
                distribution = uniform
                min = -4
                max = 4
            }
            add_to_variable = { Regional_Canidate_Support_Percentage^8 = Margin_of_Error }
        }
        if = {
            limit = {
                check_variable = { Regional_Canidate_Support_Percentage^9 > 4 }
            }
            randomize_variable = {
                var = Margin_of_Error
                distribution = uniform
                min = -4
                max = 4
            }
            add_to_variable = { Regional_Canidate_Support_Percentage^9 = Margin_of_Error }
        }
        set_variable = {
            Post_MOE_Adjusted_Total = 0
        }
        add_to_variable = { Post_MOE_Adjusted_Total = Regional_Canidate_Support_Percentage^0 }
        add_to_variable = { Post_MOE_Adjusted_Total = Regional_Canidate_Support_Percentage^1 }
        add_to_variable = { Post_MOE_Adjusted_Total = Regional_Canidate_Support_Percentage^2 }
        add_to_variable = { Post_MOE_Adjusted_Total = Regional_Canidate_Support_Percentage^3 }
        add_to_variable = { Post_MOE_Adjusted_Total = Regional_Canidate_Support_Percentage^4 }
        add_to_variable = { Post_MOE_Adjusted_Total = Regional_Canidate_Support_Percentage^5 }
        add_to_variable = { Post_MOE_Adjusted_Total = Regional_Canidate_Support_Percentage^6 }
        add_to_variable = { Post_MOE_Adjusted_Total = Regional_Canidate_Support_Percentage^7 }
        add_to_variable = { Post_MOE_Adjusted_Total = Regional_Canidate_Support_Percentage^8 }
        add_to_variable = { Post_MOE_Adjusted_Total = Regional_Canidate_Support_Percentage^9 }

        divide_variable = { Regional_Canidate_Support_Percentage^0 = Post_MOE_Adjusted_Total }
        divide_variable = { Regional_Canidate_Support_Percentage^1 = Post_MOE_Adjusted_Total }
        divide_variable = { Regional_Canidate_Support_Percentage^2 = Post_MOE_Adjusted_Total }
        divide_variable = { Regional_Canidate_Support_Percentage^3 = Post_MOE_Adjusted_Total }
        divide_variable = { Regional_Canidate_Support_Percentage^4 = Post_MOE_Adjusted_Total }
        divide_variable = { Regional_Canidate_Support_Percentage^5 = Post_MOE_Adjusted_Total }
        divide_variable = { Regional_Canidate_Support_Percentage^6 = Post_MOE_Adjusted_Total }
        divide_variable = { Regional_Canidate_Support_Percentage^7 = Post_MOE_Adjusted_Total }
        divide_variable = { Regional_Canidate_Support_Percentage^8 = Post_MOE_Adjusted_Total }
        divide_variable = { Regional_Canidate_Support_Percentage^9 = Post_MOE_Adjusted_Total }


        set_variable = {
            local_vote_total_K = Eligible_Voters_K
        }
        multiply_variable = {
            local_vote_total_K = Turnout_Percentage
        }
        multiply_variable = { Regional_Canidate_Support_Percentage^0 = local_vote_total_K }
        multiply_variable = { Regional_Canidate_Support_Percentage^1 = local_vote_total_K }
        multiply_variable = { Regional_Canidate_Support_Percentage^2 = local_vote_total_K }
        multiply_variable = { Regional_Canidate_Support_Percentage^3 = local_vote_total_K }
        multiply_variable = { Regional_Canidate_Support_Percentage^4 = local_vote_total_K }
        multiply_variable = { Regional_Canidate_Support_Percentage^5 = local_vote_total_K }
        multiply_variable = { Regional_Canidate_Support_Percentage^6 = local_vote_total_K }
        multiply_variable = { Regional_Canidate_Support_Percentage^7 = local_vote_total_K }
        multiply_variable = { Regional_Canidate_Support_Percentage^8 = local_vote_total_K }
        multiply_variable = { Regional_Canidate_Support_Percentage^9 = local_vote_total_K }


        add_to_variable = { RUS.National_Canidate_Votes_K_0 = Regional_Canidate_Support_Percentage^0 }
        add_to_variable = { RUS.National_Canidate_Votes_K_1 = Regional_Canidate_Support_Percentage^1 }
        add_to_variable = { RUS.National_Canidate_Votes_K_2 = Regional_Canidate_Support_Percentage^2 }
        add_to_variable = { RUS.National_Canidate_Votes_K_3 = Regional_Canidate_Support_Percentage^3 }
        add_to_variable = { RUS.National_Canidate_Votes_K_4 = Regional_Canidate_Support_Percentage^4 }
        add_to_variable = { RUS.National_Canidate_Votes_K_5 = Regional_Canidate_Support_Percentage^5 }
        add_to_variable = { RUS.National_Canidate_Votes_K_6 = Regional_Canidate_Support_Percentage^6 }
        add_to_variable = { RUS.National_Canidate_Votes_K_7 = Regional_Canidate_Support_Percentage^7 }
        add_to_variable = { RUS.National_Canidate_Votes_K_8 = Regional_Canidate_Support_Percentage^8 }
        add_to_variable = { RUS.National_Canidate_Votes_K_9 = Regional_Canidate_Support_Percentage^9 }
    }
    set_variable = { RUS.projected_total_national_votes = 0 }
    add_to_variable = { RUS.projected_total_national_votes = RUS.National_Canidate_Votes_K_0 }
    add_to_variable = { RUS.projected_total_national_votes = RUS.National_Canidate_Votes_K_1 }
    add_to_variable = { RUS.projected_total_national_votes = RUS.National_Canidate_Votes_K_2 }
    add_to_variable = { RUS.projected_total_national_votes = RUS.National_Canidate_Votes_K_3 }
    add_to_variable = { RUS.projected_total_national_votes = RUS.National_Canidate_Votes_K_4 }
    add_to_variable = { RUS.projected_total_national_votes = RUS.National_Canidate_Votes_K_5 }
    add_to_variable = { RUS.projected_total_national_votes = RUS.National_Canidate_Votes_K_6 }
    add_to_variable = { RUS.projected_total_national_votes = RUS.National_Canidate_Votes_K_7 }
    add_to_variable = { RUS.projected_total_national_votes = RUS.National_Canidate_Votes_K_8 }
    add_to_variable = { RUS.projected_total_national_votes = RUS.National_Canidate_Votes_K_9 }

    divide_variable = { RUS.National_Canidate_Votes_K_0 = RUS.projected_total_national_votes }
    divide_variable = { RUS.National_Canidate_Votes_K_1 = RUS.projected_total_national_votes }
    divide_variable = { RUS.National_Canidate_Votes_K_2 = RUS.projected_total_national_votes }
    divide_variable = { RUS.National_Canidate_Votes_K_3 = RUS.projected_total_national_votes }
    divide_variable = { RUS.National_Canidate_Votes_K_4 = RUS.projected_total_national_votes }
    divide_variable = { RUS.National_Canidate_Votes_K_5 = RUS.projected_total_national_votes }
    divide_variable = { RUS.National_Canidate_Votes_K_6 = RUS.projected_total_national_votes }
    divide_variable = { RUS.National_Canidate_Votes_K_7 = RUS.projected_total_national_votes }
    divide_variable = { RUS.National_Canidate_Votes_K_8 = RUS.projected_total_national_votes }
    divide_variable = { RUS.National_Canidate_Votes_K_9 = RUS.projected_total_national_votes }

    clear_array = election_final_votes
    add_to_array = { election_final_votes = RUS.National_Canidate_Votes_K_0 }
    add_to_array = { election_final_votes = RUS.National_Canidate_Votes_K_1 }
    add_to_array = { election_final_votes = RUS.National_Canidate_Votes_K_2 }
    add_to_array = { election_final_votes = RUS.National_Canidate_Votes_K_3 }
    add_to_array = { election_final_votes = RUS.National_Canidate_Votes_K_4 }
    add_to_array = { election_final_votes = RUS.National_Canidate_Votes_K_5 }
    add_to_array = { election_final_votes = RUS.National_Canidate_Votes_K_6 }
    add_to_array = { election_final_votes = RUS.National_Canidate_Votes_K_7 }
    add_to_array = { election_final_votes = RUS.National_Canidate_Votes_K_8 }
    add_to_array = { election_final_votes = RUS.National_Canidate_Votes_K_9 }

    find_highest_in_array = {
        array = election_final_votes    #Percentage
        value = max
        index = max_index
    }
    set_variable = { First_Place = max } 
    set_variable = {
        RUS_First_Place_Index = max_index
    }
    add_to_variable = {
        RUS_First_Place_Index = -1
    }
    set_variable = {
        RUS_First_Place_Value = Rus_Canidates^RUS_Winner_Index
    }
    if = {
        limit = {
            check_variable = {
                First_Place > 0.499
            }
        }
        set_variable = {
            RUS_Runoff_Check = 1   
        }
        set_variable = {
            RUS_Winner_Index = max_index
        }
        add_to_variable = {
            RUS_Winner_Index = -1
        }
        set_variable = {
            RUS_Winner_Value = Rus_Canidates^RUS_Winner_Index
        }
    }
    else_if = {
        limit = {
            check_variable = {
                First_Place < 0.5
            }
        }
        set_variable = {
            RUS_Runoff_Check = 2    #Runoff Begins
        }

        set_variable = { election_final_votes^max_index = -1 } #removes it from selection
        find_highest_in_array = {
            array = election_final_votes    #Percentage
            value = max
            index = max_index
        }
        set_temp_variable = { Second_Place = max } 
        set_variable = {
            RUS_RunnerUp_Index = max_index
        }
        add_to_variable = {
            RUS_RunnerUp_Index = -1
        }
        set_variable = {
            RUS_RunnerUp_Value = Rus_Canidates^RUS_RunnerUp_Index
        }
    }


    #Block For Winning Candidate Events and Government Change

    #Election Map Generation
    every_owned_state = {
        limit = {
            check_variable = {
                Federal_Status > 0
            }
        }
        set_variable = {
            total_rus_election_support = 0
        }

        set_variable = { Canidate_Support^0 = Regional_Canidate_Support_Percentage^0 }
        set_variable = { Canidate_Support^1 = Regional_Canidate_Support_Percentage^1 }
        set_variable = { Canidate_Support^2 = Regional_Canidate_Support_Percentage^2 }
        set_variable = { Canidate_Support^3 = Regional_Canidate_Support_Percentage^3 }
        set_variable = { Canidate_Support^4 = Regional_Canidate_Support_Percentage^4 }
        set_variable = { Canidate_Support^5 = Regional_Canidate_Support_Percentage^5 }
        set_variable = { Canidate_Support^6 = Regional_Canidate_Support_Percentage^6 }
        set_variable = { Canidate_Support^7 = Regional_Canidate_Support_Percentage^7 }
        set_variable = { Canidate_Support^8 = Regional_Canidate_Support_Percentage^8 }
        set_variable = { Canidate_Support^9 = Regional_Canidate_Support_Percentage^9 }

        set_variable = { Canidate_Support_Percentage^0 = Canidate_Support^0 }
        set_variable = { Canidate_Support_Percentage^1 = Canidate_Support^1 }
        set_variable = { Canidate_Support_Percentage^2 = Canidate_Support^2 }
        set_variable = { Canidate_Support_Percentage^3 = Canidate_Support^3 }
        set_variable = { Canidate_Support_Percentage^4 = Canidate_Support^4 }
        set_variable = { Canidate_Support_Percentage^5 = Canidate_Support^5 }
        set_variable = { Canidate_Support_Percentage^6 = Canidate_Support^6 }
        set_variable = { Canidate_Support_Percentage^7 = Canidate_Support^7 }
        set_variable = { Canidate_Support_Percentage^8 = Canidate_Support^8 }
        set_variable = { Canidate_Support_Percentage^9 = Canidate_Support^9 }

        add_to_variable = { total_rus_election_support = Canidate_Support_Percentage^0 }
        add_to_variable = { total_rus_election_support = Canidate_Support_Percentage^1 }
        add_to_variable = { total_rus_election_support = Canidate_Support_Percentage^2 }
        add_to_variable = { total_rus_election_support = Canidate_Support_Percentage^3 }
        add_to_variable = { total_rus_election_support = Canidate_Support_Percentage^4 }
        add_to_variable = { total_rus_election_support = Canidate_Support_Percentage^5 }
        add_to_variable = { total_rus_election_support = Canidate_Support_Percentage^6 }
        add_to_variable = { total_rus_election_support = Canidate_Support_Percentage^7 }
        add_to_variable = { total_rus_election_support = Canidate_Support_Percentage^8 }
        add_to_variable = { total_rus_election_support = Canidate_Support_Percentage^9 }

        divide_variable = { Canidate_Support_Percentage^0 = total_rus_election_support }
        divide_variable = { Canidate_Support_Percentage^1 = total_rus_election_support }
        divide_variable = { Canidate_Support_Percentage^2 = total_rus_election_support }
        divide_variable = { Canidate_Support_Percentage^3 = total_rus_election_support }
        divide_variable = { Canidate_Support_Percentage^4 = total_rus_election_support }
        divide_variable = { Canidate_Support_Percentage^5 = total_rus_election_support }
        divide_variable = { Canidate_Support_Percentage^6 = total_rus_election_support }
        divide_variable = { Canidate_Support_Percentage^7 = total_rus_election_support }
        divide_variable = { Canidate_Support_Percentage^8 = total_rus_election_support }
        divide_variable = { Canidate_Support_Percentage^9 = total_rus_election_support }

        if = {
            limit = {
                #check_variable = { Canidate_Support_Percentage^1 > Canidate_Support_Percentage^1 }
                check_variable = { Canidate_Support_Percentage^1 > Canidate_Support_Percentage^2 }
                check_variable = { Canidate_Support_Percentage^1 > Canidate_Support_Percentage^3 }
                check_variable = { Canidate_Support_Percentage^1 > Canidate_Support_Percentage^4 }
                check_variable = { Canidate_Support_Percentage^1 > Canidate_Support_Percentage^5 }
                check_variable = { Canidate_Support_Percentage^1 > Canidate_Support_Percentage^6 }
                check_variable = { Canidate_Support_Percentage^1 > Canidate_Support_Percentage^7 }
                check_variable = { Canidate_Support_Percentage^1 > Canidate_Support_Percentage^8 }
                check_variable = { Canidate_Support_Percentage^1 > Canidate_Support_Percentage^9 }              
            }
            set_variable = { 
                Rus_Election_Frame = RUS.Rus_Candidates_Color^0
            }
        }
        else_if = {
            limit = {
                check_variable = { Canidate_Support_Percentage^2 > Canidate_Support_Percentage^1 }
                #check_variable = { Canidate_Support_Percentage^2 > Canidate_Support_Percentage^2 }
                check_variable = { Canidate_Support_Percentage^2 > Canidate_Support_Percentage^3 }
                check_variable = { Canidate_Support_Percentage^2 > Canidate_Support_Percentage^4 }
                check_variable = { Canidate_Support_Percentage^2 > Canidate_Support_Percentage^5 }
                check_variable = { Canidate_Support_Percentage^2 > Canidate_Support_Percentage^6 }
                check_variable = { Canidate_Support_Percentage^2 > Canidate_Support_Percentage^7 }
                check_variable = { Canidate_Support_Percentage^2 > Canidate_Support_Percentage^8 }
                check_variable = { Canidate_Support_Percentage^2 > Canidate_Support_Percentage^9 }              
            }
            set_variable = { 
                Rus_Election_Frame = RUS.Rus_Candidates_Color^1
            }

        }
        else_if = {
            limit = {
                check_variable = { Canidate_Support_Percentage^3 > Canidate_Support_Percentage^1 }
                check_variable = { Canidate_Support_Percentage^3 > Canidate_Support_Percentage^2 }
                check_variable = { Canidate_Support_Percentage^3 > Canidate_Support_Percentage^4 }
                check_variable = { Canidate_Support_Percentage^3 > Canidate_Support_Percentage^5 }
                check_variable = { Canidate_Support_Percentage^3 > Canidate_Support_Percentage^6 }
                check_variable = { Canidate_Support_Percentage^3 > Canidate_Support_Percentage^7 }
                check_variable = { Canidate_Support_Percentage^3 > Canidate_Support_Percentage^8 }
                check_variable = { Canidate_Support_Percentage^3 > Canidate_Support_Percentage^9 }              
            }
            set_variable = { 
                Rus_Election_Frame = RUS.Rus_Candidates_Color^2
            }
        }
        else_if = {
            limit = {
                check_variable = { Canidate_Support_Percentage^4 > Canidate_Support_Percentage^1 }
                check_variable = { Canidate_Support_Percentage^4 > Canidate_Support_Percentage^2 }
                check_variable = { Canidate_Support_Percentage^4 > Canidate_Support_Percentage^3 }
                check_variable = { Canidate_Support_Percentage^4 > Canidate_Support_Percentage^5 }
                check_variable = { Canidate_Support_Percentage^4 > Canidate_Support_Percentage^6 }
                check_variable = { Canidate_Support_Percentage^4 > Canidate_Support_Percentage^7 }
                check_variable = { Canidate_Support_Percentage^4 > Canidate_Support_Percentage^8 }
                check_variable = { Canidate_Support_Percentage^4 > Canidate_Support_Percentage^9 }              
            }
            set_variable = { 
                Rus_Election_Frame = RUS.Rus_Candidates_Color^3
            }
        }
        else_if = {
            limit = {
                check_variable = { Canidate_Support_Percentage^5 > Canidate_Support_Percentage^1 }
                check_variable = { Canidate_Support_Percentage^5 > Canidate_Support_Percentage^2 }
                check_variable = { Canidate_Support_Percentage^5 > Canidate_Support_Percentage^3 }
                check_variable = { Canidate_Support_Percentage^5 > Canidate_Support_Percentage^4 }
                check_variable = { Canidate_Support_Percentage^5 > Canidate_Support_Percentage^6 }
                check_variable = { Canidate_Support_Percentage^5 > Canidate_Support_Percentage^7 }
                check_variable = { Canidate_Support_Percentage^5 > Canidate_Support_Percentage^8 }
                check_variable = { Canidate_Support_Percentage^5 > Canidate_Support_Percentage^9 }              
            }
            set_variable = { 
                Rus_Election_Frame = RUS.Rus_Candidates_Color^4
            }
        }
        else_if = {
            limit = {
                check_variable = { Canidate_Support_Percentage^6 > Canidate_Support_Percentage^1 }
                check_variable = { Canidate_Support_Percentage^6 > Canidate_Support_Percentage^2 }
                check_variable = { Canidate_Support_Percentage^6 > Canidate_Support_Percentage^3 }
                check_variable = { Canidate_Support_Percentage^6 > Canidate_Support_Percentage^4 }
                check_variable = { Canidate_Support_Percentage^6 > Canidate_Support_Percentage^5 }
                check_variable = { Canidate_Support_Percentage^6 > Canidate_Support_Percentage^7 }
                check_variable = { Canidate_Support_Percentage^6 > Canidate_Support_Percentage^8 }
                check_variable = { Canidate_Support_Percentage^6 > Canidate_Support_Percentage^9 }              
            }
            set_variable = { 
                Rus_Election_Frame = RUS.Rus_Candidates_Color^5
            }
        }
        else_if = {
            limit = {
                check_variable = { Canidate_Support_Percentage^7 > Canidate_Support_Percentage^1 }
                check_variable = { Canidate_Support_Percentage^7 > Canidate_Support_Percentage^2 }
                check_variable = { Canidate_Support_Percentage^7 > Canidate_Support_Percentage^3 }
                check_variable = { Canidate_Support_Percentage^7 > Canidate_Support_Percentage^4 }
                check_variable = { Canidate_Support_Percentage^7 > Canidate_Support_Percentage^5 }
                check_variable = { Canidate_Support_Percentage^7 > Canidate_Support_Percentage^6 }
                check_variable = { Canidate_Support_Percentage^7 > Canidate_Support_Percentage^8 }
                check_variable = { Canidate_Support_Percentage^7 > Canidate_Support_Percentage^9 }              
            }
            set_variable = { 
                Rus_Election_Frame = RUS.Rus_Candidates_Color^6
            }
        }
        else_if = {
            limit = {
                check_variable = { Canidate_Support_Percentage^8 > Canidate_Support_Percentage^1 }
                check_variable = { Canidate_Support_Percentage^8 > Canidate_Support_Percentage^2 }
                check_variable = { Canidate_Support_Percentage^8 > Canidate_Support_Percentage^3 }
                check_variable = { Canidate_Support_Percentage^8 > Canidate_Support_Percentage^4 }
                check_variable = { Canidate_Support_Percentage^8 > Canidate_Support_Percentage^5 }
                check_variable = { Canidate_Support_Percentage^8 > Canidate_Support_Percentage^6 }
                check_variable = { Canidate_Support_Percentage^8 > Canidate_Support_Percentage^7 }
                check_variable = { Canidate_Support_Percentage^8 > Canidate_Support_Percentage^9 }              
            }
            set_variable = { 
                Rus_Election_Frame = RUS.Rus_Candidates_Color^7
            }
        }
        else_if = {
            limit = {
                check_variable = { Canidate_Support_Percentage^9 > Canidate_Support_Percentage^1 }
                check_variable = { Canidate_Support_Percentage^9 > Canidate_Support_Percentage^2 }
                check_variable = { Canidate_Support_Percentage^9 > Canidate_Support_Percentage^3 }
                check_variable = { Canidate_Support_Percentage^9 > Canidate_Support_Percentage^4 }
                check_variable = { Canidate_Support_Percentage^9 > Canidate_Support_Percentage^5 }
                check_variable = { Canidate_Support_Percentage^9 > Canidate_Support_Percentage^6 }
                check_variable = { Canidate_Support_Percentage^9 > Canidate_Support_Percentage^7 }
                check_variable = { Canidate_Support_Percentage^9 > Canidate_Support_Percentage^8 }
            }
            set_variable = { 
                Rus_Election_Frame = RUS.Rus_Candidates_Color^8
            }
        }
        else = {
            set_variable = { 
                Rus_Election_Frame = RUS.Rus_Candidates_Color^9
            }          
        }
        clear_array = canidate_listing_array_percentage
        clear_array = canidate_listing_array
        if = {
            limit = {
                check_variable = {
                    Canidate_Support_Percentage^1 > 0
                }
            }
            add_to_array = { canidate_listing_array_percentage = Canidate_Support_Percentage^1 } 
            add_to_array = { canidate_listing_array = RUS.Rus_Canidates^0 } 
        }
        if = {
            limit = {
                check_variable = {
                    Canidate_Support_Percentage^2 > 0
                }
            }
            add_to_array = { canidate_listing_array_percentage = Canidate_Support_Percentage^2 } 
            add_to_array = { canidate_listing_array = RUS.Rus_Canidates^1 } 
        }
        if = {
            limit = {
                check_variable = {
                    Canidate_Support_Percentage^3 > 0
                }
            }
            add_to_array = { canidate_listing_array_percentage = Canidate_Support_Percentage^3 } 
            add_to_array = { canidate_listing_array = RUS.Rus_Canidates^2 } 
        }
        if = {
            limit = {
                check_variable = {
                    Canidate_Support_Percentage^4 > 0
                }
            }
            add_to_array = { canidate_listing_array_percentage = Canidate_Support_Percentage^4 } 
            add_to_array = { canidate_listing_array = RUS.Rus_Canidates^3 } 
        }
        if = {
            limit = {
                check_variable = {
                    Canidate_Support_Percentage^5 > 0
                }
            }
            add_to_array = { canidate_listing_array_percentage = Canidate_Support_Percentage^5 } 
            add_to_array = { canidate_listing_array = RUS.Rus_Canidates^4 } 
        }
        if = {
            limit = {
                check_variable = {
                    Canidate_Support_Percentage^6 > 0
                }
            }
            add_to_array = { canidate_listing_array_percentage = Canidate_Support_Percentage^6 } 
            add_to_array = { canidate_listing_array = RUS.Rus_Canidates^5 } 
        }
        if = {
            limit = {
                check_variable = {
                    Canidate_Support_Percentage^7 > 0
                }
            }
            add_to_array = { canidate_listing_array_percentage = Canidate_Support_Percentage^7 } 
            add_to_array = { canidate_listing_array = RUS.Rus_Canidates^6 } 
        }
        if = {
            limit = {
                check_variable = {
                    Canidate_Support_Percentage^8 > 0
                }
            }
            add_to_array = { canidate_listing_array_percentage = Canidate_Support_Percentage^8 } 
            add_to_array = { canidate_listing_array = RUS.Rus_Canidates^7 } 
        }
        if = {
            limit = {
                check_variable = {
                    Canidate_Support_Percentage^9 > 0
                }
            }
            add_to_array = { canidate_listing_array_percentage = Canidate_Support_Percentage^9 } 
            add_to_array = { canidate_listing_array = RUS.Rus_Canidates^8 } 
        }
        for_loop_effect = {
            end = canidate_listing_array_percentage^num
            value = v
            find_highest_in_array = {
                array = canidate_listing_array_percentage
                value = max
                index = max_index
            }
            multiply_variable = {
                canidate_listing_array_percentage^v = 100
            }
            round_variable = canidate_listing_array_percentage^v
        }


        # Creation of temp arrays.
        # The arrays are "copied" from canidate_listing_array and canidate_listing_array_percentage for sorting
        resize_temp_array = {
            array = canidate_listing_array_percentage_temp
            size = canidate_listing_array_percentage^num
        }
        resize_temp_array = {
            array = canidate_listing_array_temp
            size = canidate_listing_array_percentage^num
        }
        # Sort the values by largest support
        for_loop_effect = {
            end = canidate_listing_array_percentage^num
            value = v
            find_highest_in_array = {
                array = canidate_listing_array_percentage
                value = max
                index = max_index
            }
            set_temp_variable = { canidate_listing_array_percentage_temp^v = max } #sets biggest at the earliest available position
            set_temp_variable = { canidate_listing_array_temp^v = canidate_listing_array^max_index } #sets biggest TAG at the earliest available position
            set_variable = { canidate_listing_array_percentage^max_index = -1 } #removes it from selection
        }

        # Clears the Values
        clear_array = canidate_listing_array_percentage
        clear_array = canidate_listing_array

        set_temp_variable = { influence_total = 0 }
        # Restores destroyed arrays in the above process - i.e. if they were deleted due to being less then 1%
        for_each_loop = {
            array = canidate_listing_array_percentage_temp
            add_to_array = { canidate_listing_array_percentage = v }
            add_to_temp_variable = { influence_total = v }
        }
        for_each_loop = {
            array = canidate_listing_array_temp
            add_to_array = { canidate_listing_array = v }
        }
        clear_temp_array = canidate_listing_array_percentage_temp
        clear_temp_array = canidate_listing_array_temp
    }
}
Yeltsin_Campaign_Launch_Runoff_1991 = {
    add_to_array = {
        Rus_Canidates = 1
    }
    set_variable = {
        Yeltsin_Position = Rus_Canidates^num
    }
    set_variable = {
        Yeltsin_Position_Slot = Rus_Canidates^num
    }
    add_to_array = {
        Rus_Charsima_Score = 4
    }
    add_to_array = {
        Rus_Stamina_Score = 1
    }
    add_to_array = {
        Rus_Fundraising_Score = 5
    }
    #Fundraising Setup
    set_variable = {
        fundraising_initial = 20
    }
    multiply_variable = {
        fundraising_initial = Rus_Fundraising_Score^Yeltsin_Position_Slot
    }
    add_to_array = {
        Rus_Campaign_Funds = fundraising_initial
    }
    #Fundraising End
    add_to_array = {
        Rus_Candidates_Color = 6
    }
    every_owned_state = {
        add_to_variable = {
            Yeltsin_Standard_Deviation = -1
        }
        if = {
            limit = {  
                check_variable = {
                    Yeltsin_Standard_Deviation = 1
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 1
                max = 12
            }
            set_variable = { 
                Canidate_Support^ROOT.Yeltsin_Position = Canidate_Support_Temp
            }
        } 
        else_if = {
            limit = {   
                check_variable = {
                    Yeltsin_Standard_Deviation = 2
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 12	
                max = 24
            }
            set_variable = { 
                Canidate_Support^ROOT.Yeltsin_Position = Canidate_Support_Temp
            }
        } 
        else_if = {
            limit = {   
                check_variable = {
                    Yeltsin_Standard_Deviation = 3
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 24
                max = 36
            }
            set_variable = { 
                Canidate_Support^ROOT.Yeltsin_Position = Canidate_Support_Temp
            }
        } 
        else_if = {
            limit = {   
                check_variable = {
                    Yeltsin_Standard_Deviation = 4
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 36
                max = 48
            }
            set_variable = { 
                Canidate_Support^ROOT.Yeltsin_Position = Canidate_Support_Temp
            }
        } 
        else_if = {
            limit = {   
                check_variable = {
                    Yeltsin_Standard_Deviation = 5
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 48
                max = 60
            }
            set_variable = { 
                Canidate_Support^ROOT.Yeltsin_Position = Canidate_Support_Temp
            }
        } 
        else_if = {
            limit = {   
                check_variable = {
                    Yeltsin_Standard_Deviation = 6
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 60
                max = 72
            }
            set_variable = { 
                Canidate_Support^ROOT.Yeltsin_Position = Canidate_Support_Temp
            }
        } 
        else_if = {
            limit = {   
                check_variable = {
                    Yeltsin_Standard_Deviation = 7
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 72
                max = 84
            }
            set_variable = { 
                Canidate_Support^ROOT.Yeltsin_Position = Canidate_Support_Temp
            }
        } 
        else_if = {
            limit = {   
                check_variable = {
                    Yeltsin_Standard_Deviation = 8
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 84
                max = 96
            }
            set_variable = { 
                Canidate_Support^ROOT.Yeltsin_Position = Canidate_Support_Temp
            }
        } 
        else = { }
    }
    if = {
        limit = {
            check_variable = { Rus_Canidates^num > 1 }
            NOT = {
                has_country_flag = rus_election_map_generated
            }
        }
        generate_campaign_map_russia = yes
    }
}
Ryzhkov_Campaign_Launch_Runoff_1991 = {
    add_to_array = {
        Rus_Canidates = 2
    }
    add_to_array = {
        Rus_Candidates_Color = 1
    }
    add_to_array = {
        Rus_Charsima_Score = 3
    }
    add_to_array = {
        Rus_Stamina_Score = 3
    }
    add_to_array = {
        Rus_Fundraising_Score = 3
    }
    set_variable = {
        Ryzhkov_Position = Rus_Canidates^num
    }
    set_variable = {
        Ryzhkov_Position_Slot = Rus_Canidates^num
    }
    #Fundraising Setup
    set_variable = {
        fundraising_initial = 20
    }
    multiply_variable = {
        fundraising_initial = Rus_Fundraising_Score^Ryzhkov_Position_Slot
    }
    add_to_array = {
        Rus_Campaign_Funds = fundraising_initial
    }
    every_owned_state = {
        if = {
            limit = {  
                check_variable = {
                    Ryzhkov_Standard_Deviation = 1
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 1
                max = 9
            }
            set_variable = { 
                Canidate_Support^ROOT.Ryzhkov_Position = Canidate_Support_Temp
            }
        } 
        else_if = {
            limit = {   
                check_variable = {
                    Ryzhkov_Standard_Deviation = 2
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 9	
                max = 18
            }
            set_variable = { 
                Canidate_Support^ROOT.Ryzhkov_Position = Canidate_Support_Temp
            }
        } 
        else_if = {
            limit = {   
                check_variable = {
                    Ryzhkov_Standard_Deviation = 3
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 18
                max = 27
            }
            set_variable = { 
                Canidate_Support^ROOT.Ryzhkov_Position = Canidate_Support_Temp
            }
        } 
        else_if = {
            limit = {   
                check_variable = {
                    Ryzhkov_Standard_Deviation = 4
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 27
                max = 36
            }
            set_variable = { 
                Canidate_Support^ROOT.Ryzhkov_Position = Canidate_Support_Temp
            }
        } 
        else_if = {
            limit = {   
                check_variable = {
                    Ryzhkov_Standard_Deviation = 5
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 36
                max = 45
            }
            set_variable = { 
                Canidate_Support^ROOT.Ryzhkov_Position = Canidate_Support_Temp
            }
        } 
        else_if = {
            limit = {   
                check_variable = {
                    Ryzhkov_Standard_Deviation = 6
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 45
                max = 54
            }
            set_variable = { 
                Canidate_Support^ROOT.Ryzhkov_Position = Canidate_Support_Temp
            }
        } 
        else_if = {
            limit = {   
                check_variable = {
                    Ryzhkov_Standard_Deviation = 7
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 54
                max = 63
            }
            set_variable = { 
                Canidate_Support^ROOT.Ryzhkov_Position = Canidate_Support_Temp
            }
        } 
        else = { }
        multiply_variable = {
            Canidate_Support^ROOT.Ryzhkov_Position = 2
        }
    }
    if = {
        limit = {
            check_variable = { Rus_Canidates^num > 1 }
            NOT = {
                has_country_flag = rus_election_map_generated
            }
        }
        generate_campaign_map_russia = yes
    }
}

Zhirinovsky_Campaign_Launch_Runoff_1991 = {
    add_to_array = {
        Rus_Canidates = 3
    }
    add_to_array = {
        Rus_Candidates_Color = 8
    }
    set_variable = {
        Zhirinovsky_Position = Rus_Canidates^num
    }
    add_to_array = {
        Rus_Charsima_Score = 4
    }
    add_to_array = {
        Rus_Stamina_Score = 5
    }
    add_to_array = {
        Rus_Fundraising_Score = 2
    }
    set_variable = {
        Zhirinovsky_Position_Slot = Rus_Canidates^num
    }
    #Fundraising Setup
    set_variable = {
        fundraising_initial = 20
    }
    multiply_variable = {
        fundraising_initial = Rus_Fundraising_Score^Zhirinovsky_Position_Slot
    }
    add_to_array = {
        Rus_Campaign_Funds = fundraising_initial
    }
    every_owned_state = {
        if = {
            limit = {  
                check_variable = {
                    Zhirinovsky_Standard_Deviation = 1
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 1
                max = 3
            }
            set_variable = { 
                Canidate_Support^ROOT.Zhirinovsky_Position = Canidate_Support_Temp
            }
        } 
        else_if = {
            limit = {   
                check_variable = {
                    Zhirinovsky_Standard_Deviation = 2
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 3	
                max = 6
            }
            set_variable = { 
                Canidate_Support^ROOT.Zhirinovsky_Position = Canidate_Support_Temp
            }
        } 
        else_if = {
            limit = {   
                check_variable = {
                    Zhirinovsky_Standard_Deviation = 3
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 6
                max = 9
            }
            set_variable = { 
                Canidate_Support^ROOT.Zhirinovsky_Position = Canidate_Support_Temp
            }
        } 
        else_if = {
            limit = {   
                check_variable = {
                    Zhirinovsky_Standard_Deviation = 4
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 9
                max = 12
            }
            set_variable = { 
                Canidate_Support^ROOT.Zhirinovsky_Position = Canidate_Support_Temp
            }
        } 
        else_if = {
            limit = {   
                check_variable = {
                    Zhirinovsky_Standard_Deviation = 5
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 12
                max = 15
            }
            set_variable = { 
                Canidate_Support^ROOT.Zhirinovsky_Position = Canidate_Support_Temp
            }
        } 
        else_if = {
            limit = {   
                check_variable = {
                    Zhirinovsky_Standard_Deviation = 6
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 15
                max = 18
            }
            set_variable = { 
                Canidate_Support^ROOT.Zhirinovsky_Position = Canidate_Support_Temp
            }
        } 
        else = { }
        multiply_variable = {
            Canidate_Support^ROOT.Ryzhkov_Position = 2.75
        }
    }
    if = {
        limit = {
            check_variable = { Rus_Canidates^num > 1 }
            NOT = {
                has_country_flag = rus_election_map_generated
            }
        }
        generate_campaign_map_russia = yes
    }
}

Tuleyev_Campaign_Launch_Runoff_1991 = {
    add_to_array = {
        Rus_Canidates = 4
    }
    add_to_array = {
        Rus_Candidates_Color = 2
    }
    set_variable = {
        Tuleyev_Position = Rus_Canidates^num
    }
    add_to_array = {
        Rus_Charsima_Score = 4
    }
    add_to_array = {
        Rus_Stamina_Score = 4
    }
    add_to_array = {
        Rus_Fundraising_Score = 2
    }
    set_variable = {
        Tuleyev_Position_Slot = Rus_Canidates^num
    }
    #Fundraising Setup
    set_variable = {
        fundraising_initial = 20
    }
    multiply_variable = {
        fundraising_initial = Rus_Fundraising_Score^Tuleyev_Position_Slot
    }
    add_to_array = {
        Rus_Campaign_Funds = fundraising_initial
    }
    every_owned_state = {
        if = {
            limit = {  
                check_variable = {
                    Tuleyev_Standard_Deviation = 1
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 1
                max = 6
            }
            set_variable = { 
                Canidate_Support^ROOT.Tuleyev_Position = Canidate_Support_Temp
            }
            add_to_variable = {
                Canidate_Support^ROOT.Tuleyev_Position = 2
            }
            multiply_variable = {
                Canidate_Support^ROOT.Tuleyev_Position = 3
            }
        } 
        else_if = {
            limit = {   
                check_variable = {
                    Tuleyev_Standard_Deviation = 2
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 6
                max = 12
            }
            multiply_variable = {
                Canidate_Support^ROOT.Tuleyev_Position = 2.5
            }
            set_variable = { 
                Canidate_Support^ROOT.Tuleyev_Position = Canidate_Support_Temp
            }
        } 
        else_if = {
            limit = {   
                check_variable = {
                    Tuleyev_Standard_Deviation = 3
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 12
                max = 18
            }
            set_variable = { 
                Canidate_Support^ROOT.Tuleyev_Position = Canidate_Support_Temp
            }
            multiply_variable = {
                Canidate_Support^ROOT.Tuleyev_Position = 2
            }
        } 
        else_if = {
            limit = {   
                check_variable = {
                    Tuleyev_Standard_Deviation = 4
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 18
                max = 24
            }
            set_variable = { 
                Canidate_Support^ROOT.Tuleyev_Position = Canidate_Support_Temp
            }
            multiply_variable = {
                Canidate_Support^ROOT.Tuleyev_Position = 2
            }
        } 
        else_if = {
            limit = {   
                check_variable = {
                    Tuleyev_Standard_Deviation = 5
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 24
                max = 30
            }
            set_variable = { 
                Canidate_Support^ROOT.Tuleyev_Position = Canidate_Support_Temp
            }
            multiply_variable = {
                Canidate_Support^ROOT.Tuleyev_Position = 1.75
            }
        } 
        else_if = {
            limit = {   
                check_variable = {
                    Tuleyev_Standard_Deviation = 6
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 30
                max = 34
            }
            set_variable = { 
                Canidate_Support^ROOT.Tuleyev_Position = Canidate_Support_Temp
            }
            multiply_variable = {
                Canidate_Support^ROOT.Tuleyev_Position = 1.75
            }
        } 
        else_if = {
            limit = {   
                check_variable = {
                    Tuleyev_Standard_Deviation = 7
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 42
                max = 48
            }
            set_variable = { 
                Canidate_Support^ROOT.Tuleyev_Position = Canidate_Support_Temp
            }
            multiply_variable = {
                Canidate_Support^ROOT.Tuleyev_Position = 1.5
            }
        } 

        else = { }
    }
    if = {
        limit = {
            check_variable = { Rus_Canidates^num > 1 }
            NOT = {
                has_country_flag = rus_election_map_generated
            }
        }
        generate_campaign_map_russia = yes
    }
}

Bakatin_Campaign_Launch_Runoff_1991 = {
    add_to_array = {
        Rus_Canidates = 5
    }
    add_to_array = {
        Rus_Candidates_Color = 4
    }
    set_variable = {
        Bakatin_Position = Rus_Canidates^num
    }
    add_to_array = {
        Rus_Charsima_Score = 3
    }
    add_to_array = {
        Rus_Stamina_Score = 3
    }
    add_to_array = {
        Rus_Fundraising_Score = 4
    }
    set_variable = {
        Bakatin_Position_Slot = Rus_Canidates^num
    }
    #Fundraising Setup
    set_variable = {
        fundraising_initial = 20
    }
    multiply_variable = {
        fundraising_initial = Rus_Fundraising_Score^Bakatin_Position_Slot
    }
    add_to_array = {
        Rus_Campaign_Funds = fundraising_initial
    }
    every_owned_state = {
        if = {
            limit = {  
                check_variable = {
                    Bakatin_Standard_Deviation = 1
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 1
                max = 2
            }
            set_variable = { 
                Canidate_Support^ROOT.Bakatin_Position = Canidate_Support_Temp
            }
            add_to_variable = {
                Canidate_Support^ROOT.Bakatin_Position = 15
            }
        } 
        else_if = {
            limit = {   
                check_variable = {
                    Bakatin_Standard_Deviation = 2
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 2
                max = 4
            }
            set_variable = { 
                Canidate_Support^ROOT.Bakatin_Position = Canidate_Support_Temp
            }
            add_to_variable = {
                Canidate_Support^ROOT.Bakatin_Position = 15
            }
        } 
        else_if = {
            limit = {   
                check_variable = {
                    Bakatin_Standard_Deviation = 3
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 4
                max = 6
            }
            set_variable = { 
                Canidate_Support^ROOT.Bakatin_Position = Canidate_Support_Temp
            }
            add_to_variable = {
                Canidate_Support^ROOT.Bakatin_Position = 20
            }
        } 
        else_if = {
            limit = {   
                check_variable = {
                    Bakatin_Standard_Deviation = 4
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 6
                max = 8
            }
            add_to_variable = {
                Canidate_Support^ROOT.Bakatin_Position = 20
            }
            set_variable = { 
                Canidate_Support^ROOT.Bakatin_Position = Canidate_Support_Temp
            }
        } 
        else_if = {
            limit = {   
                check_variable = {
                    Bakatin_Standard_Deviation = 5
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 8
                max = 10
            }
            add_to_variable = {
                Canidate_Support^ROOT.Bakatin_Position = 18
            }
            set_variable = { 
                Canidate_Support^ROOT.Bakatin_Position = Canidate_Support_Temp
            }
        } 
        else_if = {
            limit = {   
                check_variable = {
                    Bakatin_Standard_Deviation = 6
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 10
                max = 12
            }
            add_to_variable = {
                Canidate_Support^ROOT.Bakatin_Position = 18
            }
            set_variable = { 
                Canidate_Support^ROOT.Bakatin_Position = Canidate_Support_Temp
            }
        } 
        else_if = {
            limit = {   
                check_variable = {
                    Bakatin_Standard_Deviation = 7
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 12
                max = 14
            }
            add_to_variable = {
                Canidate_Support^ROOT.Bakatin_Position = 18
            }
            set_variable = { 
                Canidate_Support^ROOT.Bakatin_Position = Canidate_Support_Temp
            }
        } 
        else_if = {
            limit = {   
                check_variable = {
                    Bakatin_Standard_Deviation = 8
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 14
                max = 16
            }
            add_to_variable = {
                Canidate_Support^ROOT.Bakatin_Position = 23
            }
            set_variable = { 
                Canidate_Support^ROOT.Bakatin_Position = Canidate_Support_Temp
            }
        } 
        else = { }
        multiply_variable = {
            set_variable = { 
                Canidate_Support^ROOT.Bakatin_Position = 2
            }   
        }
    }
    if = {
        limit = {
            check_variable = { Rus_Canidates^num > 1 }
            NOT = {
                has_country_flag = rus_election_map_generated
            }
        }
        generate_campaign_map_russia = yes
    }
}
Makashov_Campaign_Launch_Runoff_1991 = {
    add_to_array = {
        Rus_Canidates = 6
    }
    add_to_array = {
        Rus_Candidates_Color = 14
    }
    add_to_array = {
        Rus_Charsima_Score = 3
    }
    add_to_array = {
        Rus_Stamina_Score = 3
    }
    add_to_array = {
        Rus_Fundraising_Score = 2
    }

    set_variable = {
        Makashov_Position = Rus_Canidates^num
    }
    set_variable = {
        Makashov_Position_Slot = Rus_Canidates^num
    }
    #Fundraising Setup
    set_variable = {
        fundraising_initial = 20
    }
    multiply_variable = {
        fundraising_initial = Rus_Fundraising_Score^Makashov_Position_Slot
    }
    add_to_array = {
        Rus_Campaign_Funds = fundraising_initial
    }
    every_owned_state = {
        if = {
            limit = {  
                check_variable = {
                    Makashov_Standard_Deviation = 1
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 1
                max = 2
            }
            set_variable = { 
                Canidate_Support^ROOT.Makashov_Position = Canidate_Support_Temp
            }
        } 
        else_if = {
            limit = {   
                check_variable = {
                    Makashov_Standard_Deviation = 2
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 2
                max = 4
            }
            set_variable = { 
                Canidate_Support^ROOT.Makashov_Position = Canidate_Support_Temp
            }
        } 
        else_if = {
            limit = {   
                check_variable = {
                    Makashov_Standard_Deviation = 3
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 4
                max = 6
            }
            set_variable = { 
                Canidate_Support^ROOT.Makashov_Position = Canidate_Support_Temp
            }
        } 
        else_if = {
            limit = {   
                check_variable = {
                    Makashov_Standard_Deviation = 4
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 6
                max = 8
            }
            set_variable = { 
                Canidate_Support^ROOT.Makashov_Position = Canidate_Support_Temp
            }
        } 
        else_if = {
            limit = {   
                check_variable = {
                    Makashov_Standard_Deviation = 5
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 8
                max = 10
            }
            set_variable = { 
                Canidate_Support^ROOT.Makashov_Position = Canidate_Support_Temp
            }
        } 
        else_if = {
            limit = {   
                check_variable = {
                    Makashov_Standard_Deviation = 6
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 10
                max = 12
            }
            set_variable = { 
                Canidate_Support^ROOT.Makashov_Position = Canidate_Support_Temp
            }
        } 
        else_if = {
            limit = {   
                check_variable = {
                    Makashov_Standard_Deviation = 7
                }
            }
            randomize_variable = {
                var = Canidate_Support_Temp
                distribution = uniform
                min = 12
                max = 14
            }
            set_variable = { 
                Canidate_Support^ROOT.Makashov_Position = Canidate_Support_Temp
            }
        } 

        else = { }
        add_to_variable = {
            Canidate_Support^ROOT.Makashov_Position = 15
        }
        multiply_variable = {
            Canidate_Support^ROOT.Makashov_Position = 2
        }
    }
    if = {
        limit = {
            check_variable = { Rus_Canidates^num > 1 }
            NOT = {
                has_country_flag = rus_election_map_generated
            }
        }
        generate_campaign_map_russia = yes
    }
}


RUS_Clear_Current_Election_Candidates_and_Statistics = {
    clear_array = Rus_Canidates
    clear_array = Rus_Candidates_Color
    clear_array = canidate_listing_array_percentage
    clear_array = canidate_listing_array

    set_variable = { RUS.National_Canidate_Votes_K_0 = 0 }
    set_variable = { RUS.National_Canidate_Votes_K_1 = 0 }
    set_variable = { RUS.National_Canidate_Votes_K_2 = 0 }
    set_variable = { RUS.National_Canidate_Votes_K_3 = 0 }
    set_variable = { RUS.National_Canidate_Votes_K_4 = 0 }
    set_variable = { RUS.National_Canidate_Votes_K_5 = 0 }
    set_variable = { RUS.National_Canidate_Votes_K_6 = 0 }
    set_variable = { RUS.National_Canidate_Votes_K_7 = 0 }
    set_variable = { RUS.National_Canidate_Votes_K_8 = 0 }
    set_variable = { RUS.National_Canidate_Votes_K_9 = 0 }

    set_variable = { RUS.National_Canidate_Votes_K_0 = 0 }
    set_variable = { RUS.National_Canidate_Votes_K_1 = 0 }
    set_variable = { RUS.National_Canidate_Votes_K_2 = 0 }
    set_variable = { RUS.National_Canidate_Votes_K_3 = 0 }
    set_variable = { RUS.National_Canidate_Votes_K_4 = 0 }
    set_variable = { RUS.National_Canidate_Votes_K_5 = 0 }
    set_variable = { RUS.National_Canidate_Votes_K_6 = 0 }
    set_variable = { RUS.National_Canidate_Votes_K_7 = 0 }
    set_variable = { RUS.National_Canidate_Votes_K_8 = 0 }
    set_variable = { RUS.National_Canidate_Votes_K_9 = 0 }

    every_owned_state = {
        clear_array = Rus_Canidates
        clear_array = Rus_Candidates_Color
        clear_array = canidate_listing_array_percentage
        clear_array = canidate_listing_array
        set_variable = { Canidate_Support^0 = 0 }
        set_variable = { Canidate_Support^1 = 0 }
        set_variable = { Canidate_Support^2 = 0 }
        set_variable = { Canidate_Support^3 = 0 }
        set_variable = { Canidate_Support^4 = 0 }
        set_variable = { Canidate_Support^5 = 0 }
        set_variable = { Canidate_Support^7 = 0 }
        set_variable = { Canidate_Support^8 = 0 }
        set_variable = { Canidate_Support^9 = 0 }
    }
}




