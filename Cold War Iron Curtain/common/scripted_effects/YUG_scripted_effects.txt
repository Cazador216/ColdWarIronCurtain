increase_state_developement = {
		        if = {
                    limit = {
                        has_state_category = pop1
                    }   
                    hidden_effect = {
                        set_state_category = pop1dev1
                    }    
                    custom_effect_tooltip = YUG_localisation_state_development_1
                }			
                else_if = {
                    limit = {
                        has_state_category = pop1dev1
                    }   
                   hidden_effect = {
                        set_state_category = pop1dev2
                    }
                    custom_effect_tooltip = YUG_localisation_state_development_2
                    }
                else_if = {
                    limit = {
                        has_state_category = pop1dev2
                    }   
                   hidden_effect = {
                        set_state_category = pop1dev3
                    }
                    custom_effect_tooltip = YUG_localisation_state_development_3               
                    }
                else_if = {
                    limit = {
                        has_state_category = pop1dev3
                    }   
                   hidden_effect = {
                        set_state_category = pop1dev4
                    }
                    custom_effect_tooltip = YUG_localisation_state_development_4
                    }		
                else = {
                    add_political_power = 50
                }

}

yug_increase_federalisation = {

add_to_variable = { YUG_PPS_Federalisation = 0.02 }
subtract_from_variable = { YUG_PPF_Federalisation = 0.04 }
subtract_from_variable = { YUG_FO_Federalisation = 0.02  }
subtract_from_variable = { YUG_DO_Federalisation = 0.02  }
subtract_from_variable = { YUG_CG_Federalisation = 0.02  }
add_to_variable = { YUG_Prod_Max_Federalisation = 0.02  }
subtract_from_variable = { YUG_CS_Federalisation = 0.04  }
add_to_variable = { YUG_federalisation_var = 1  }

custom_effect_tooltip = YUG_localisation_increase_federalisation

}

yug_decrease_federalisation = {

subtract_from_variable = { YUG_PPS_Federalisation = 0.02 }
add_to_variable = { YUG_PPF_Federalisation = 0.04 }
add_to_variable = { YUG_FO_Federalisation = 0.02  }
add_to_variable = { YUG_DO_Federalisation = 0.02  }
add_to_variable = { YUG_CG_Federalisation = 0.02  }
subtract_from_variable = { YUG_Prod_Max_Federalisation = 0.02  }
add_to_variable = { YUG_CS_Federalisation = 0.04  }
subtract_from_variable = { YUG_federalisation_var = 1  }

custom_effect_tooltip = YUG_localisation_decrease_federalisation

}

YUG_drift_to_the_west = {
hidden_effect = {
	if = {
	    limit = {
	        has_idea = YUG_idea_non_allignment_1
	    }
	    swap_ideas = {
	        remove_idea = YUG_idea_non_allignment_1
	        add_idea = YUG_idea_non_allignment_2
	    }
	}
	else_if = {
	    limit = {
	        has_idea = YUG_idea_non_allignment_2
	    }
	    swap_ideas = {
	        remove_idea = YUG_idea_non_allignment_2
	        add_idea = YUG_idea_non_allignment_3
	    }
	}
	else_if = {
	    limit = {
	        has_idea = YUG_idea_non_allignment_3
	    }
	    swap_ideas = {
	        remove_idea = YUG_idea_non_allignment_3
	        add_idea = YUG_idea_non_allignment_4
	    }
	}
	else_if = {
	    limit = {
	        has_idea = YUG_idea_non_allignment_4
	    }
	    swap_ideas = {
	        remove_idea = YUG_idea_non_allignment_4
	        add_idea = YUG_idea_non_allignment_5
	    }
	}
	else = {
	    add_popularity = {
	        ideology = socialist
	        popularity = 0.05
	    }
	}
}
custom_effect_tooltip = YUG_localisation_drift_westward
}

YUG_recover_from_ww2 = {
	if = {
	    limit = {
	        has_idea = YUG_idea_scars_of_the_national_liberation_war_1
	    }
	    swap_ideas = {
	        remove_idea = YUG_idea_scars_of_the_national_liberation_war_1
	        add_idea = YUG_idea_scars_of_the_national_liberation_war_2
	    }
	}
	else_if = {
	    limit = {
	        has_idea = YUG_idea_scars_of_the_national_liberation_war_2
	    }
	    swap_ideas = {
	        remove_idea = YUG_idea_scars_of_the_national_liberation_war_2
	        add_idea = YUG_idea_scars_of_the_national_liberation_war_3
	    }
	}
	else_if = {
	    limit = {
	        has_idea = YUG_idea_scars_of_the_national_liberation_war_3
	    }
	    remove_ideas = YUG_idea_scars_of_the_national_liberation_war_3
	}
}

YUG_drift_to_the_east = {
hidden_effect = {
	if = {
	    limit = {
	        has_idea = YUG_idea_non_allignment_5
	    }
	    swap_ideas = {
	        remove_idea = YUG_idea_non_allignment_5
	        add_idea = YUG_idea_non_allignment_4
	    }
	}
	else_if = {
	    limit = {
	        has_idea = YUG_idea_non_allignment_4
	    }
	    swap_ideas = {
	        remove_idea = YUG_idea_non_allignment_4
	        add_idea = YUG_idea_non_allignment_3
	    }
	}
	else_if = {
	    limit = {
	        has_idea = YUG_idea_non_allignment_3
	    }
	    swap_ideas = {
	        remove_idea = YUG_idea_non_allignment_3
	        add_idea = YUG_idea_non_allignment_2
	    }
	}
	else_if = {
	    limit = {
	        has_idea = YUG_idea_non_allignment_2
	    }
	    swap_ideas = {
	        remove_idea = YUG_idea_non_allignment_2
	        add_idea = YUG_idea_non_allignment_1
	    }
	}
	else = {
	    add_popularity = {
	        ideology = communism
	        popularity = 0.05
	    }
	}	
}
custom_effect_tooltip = YUG_localisation_drift_eastward
}

YUG_drift_to_neutrality = {
hidden_effect = {
	if = {
	    limit = {
	        has_idea = YUG_idea_non_allignment_5
	    }
	    swap_ideas = {
	        remove_idea = YUG_idea_non_allignment_5
	        add_idea = YUG_idea_non_allignment_4
	    }
	}
	else_if = {
	    limit = {
	        has_idea = YUG_idea_non_allignment_4
	    }
	    swap_ideas = {
	        remove_idea = YUG_idea_non_allignment_4
	        add_idea = YUG_idea_non_allignment_3
	    }
	}
	else_if = {
	    limit = {
	        has_idea = YUG_idea_non_allignment_2
	    }
	    swap_ideas = {
	        remove_idea = YUG_idea_non_allignment_2
	        add_idea = YUG_idea_non_allignment_3
	    }
	}
	else_if = {
	    limit = {
	        has_idea = YUG_idea_non_allignment_1
	    }
	    swap_ideas = {
	        remove_idea = YUG_idea_non_allignment_1
	        add_idea = YUG_idea_non_allignment_2
	    }
	}	
	else = {
	    add_popularity = {
	        ideology = trotskyism
	        popularity = 0.05
	    }
	}	
}
custom_effect_tooltip = YUG_localisation_drift_neutrality
}

YUG_improve_recession = {
	hidden_effect = {
		add_to_variable = { YUG_Factory_Output_Penalty_Recession = 0.04 }
		add_to_variable = { YUG_Dockyard_Output_Penalty_Recession = 0.04 }
		add_to_variable = { YUG_Consumer_Goods_Penalty_Recession = -0.02 }
		add_to_variable = { YUG_Prod_Max_Penalty_Recession = 0.04 }
		add_to_variable = { YUG_Construction_Penalty_Recession = 0.05 }
		add_to_variable = { YUG_Stability_Penalty_Recession = 0.02 }
	}
    custom_effect_tooltip = YUG_localisation_improve_recession    
}

YUG_calc_ROF_var2 = {
	set_temp_variable = { progressrofvar2_precalc = Progress_ROF_var }

	##code snippet by Yard1: Babylonian method of finding square roots

		set_temp_variable = { x = 2931 }

		set_temp_variable = { y = 1 }
		set_temp_variable = { e = 0.001 } # precision - game can't go any lower than this
		while_loop_effect = {
			limit = {
				set_temp_variable = { t_x = x }
				subtract_from_temp_variable = { t_x = y }
				check_variable = { t_x > e }
			}
			add_to_temp_variable = { x = y }
			divide_temp_variable = { x = 2 }
			set_temp_variable = { y = progressrofvar2_precalc }
			divide_temp_variable = { y = x }
		}
		set_temp_variable = { progressrofvar2_postcalc = x }

		multiply_temp_variable = { progressrofvar2_postcalc = 0.02 }
		#maximum is +0.2 from lowest value possible which is -0.1 aka +0.1

		set_variable = { YUG_Progress_ROF_var2 = -0.15 }
		add_to_variable = { YUG_Progress_ROF_var2 = progressrofvar2_postcalc }

		set_variable = { YUG_Progress_ROF_var3 = YUG_Progress_ROF_var2 }
		multiply_variable = { YUG_Progress_ROF_var3 = -1 }
		set_variable = { YUG_Progress_ROF_var4 = YUG_Progress_ROF_var2 }
		multiply_variable = { YUG_Progress_ROF_var4 = 0.1 }
}

YUG_calc_MILDEF_var2 = {
	set_temp_variable = { progressmildefvar2_precalc = Progress_MILDEF_var }

	##code snippet by Yard1: Babylonian method of finding square roots

		set_temp_variable = { x = 2931 }

		set_temp_variable = { y = 1 }
		set_temp_variable = { e = 0.001 } # precision - game can't go any lower than this
		while_loop_effect = {
			limit = {
				set_temp_variable = { t_x = x }
				subtract_from_temp_variable = { t_x = y }
				check_variable = { t_x > e }
			}
			add_to_temp_variable = { x = y }
			divide_temp_variable = { x = 2 }
			set_temp_variable = { y = progressmildefvar2_precalc }
			divide_temp_variable = { y = x }
		}
		set_temp_variable = { progressmildefvar2_postcalc = x }

		multiply_temp_variable = { progressmildefvar2_postcalc = 0.02 }
		#maximum is +0.2 from lowest value possible which is -0.1 aka +0.1

		set_variable = { YUG_Progress_MILDEF_var2 = -0.16 } 
		add_to_variable = { YUG_Progress_MILDEF_var2 = progressmildefvar2_postcalc }
}

YUG_calc_INTDEF_var2 = {
	set_temp_variable = { progressintdefvar2_precalc = Progress_INTDEF_var }

	##code snippet by Yard1: Babylonian method of finding square roots

		set_temp_variable = { x = 2931 }

		set_temp_variable = { y = 1 }
		set_temp_variable = { e = 0.001 } # precision - game can't go any lower than this
		while_loop_effect = {
			limit = {
				set_temp_variable = { t_x = x }
				subtract_from_temp_variable = { t_x = y }
				check_variable = { t_x > e }
			}
			add_to_temp_variable = { x = y }
			divide_temp_variable = { x = 2 }
			set_temp_variable = { y = progressintdefvar2_precalc }
			divide_temp_variable = { y = x }
		}
		set_temp_variable = { progressintdefvar2_postcalc = x }

		multiply_temp_variable = { progressintdefvar2_postcalc = 0.02 }
		#maximum is +0.2 from lowest value possible which is -0.1 aka +0.1

		set_variable = { YUG_Progress_INTDEF_var2 = -0.16 }
		add_to_variable = { YUG_Progress_INTDEF_var2 = progressintdefvar2_postcalc }

		set_variable = { YUG_Progress_INTDEF_var4 = YUG_Progress_INTDEF_var2 }
		multiply_variable = { YUG_Progress_INTDEF_var4 = 0.1 }		
}

YUG_calc_informbiro_effects = {
	YUG_calc_INTDEF_var2 = yes
	YUG_calc_MILDEF_var2 = yes
	YUG_calc_ROF_var2 = yes
}

YUG_change_rof_var = {
	custom_effect_tooltip = YUG_localisation_rof_var_change
	hidden_effect = { add_to_variable = { Progress_ROF_var = yug_tempvar } } 
    clamp_variable = {  
        var = Progress_ROF_var
        min = 0
        max = 100
    }	
	YUG_calc_ROF_var2 = yes
}

YUG_change_mildef_var = {
	custom_effect_tooltip = YUG_localisation_mildef_var_change
	hidden_effect = { add_to_variable = { Progress_MILDEF_var = yug_tempvar } } 
    clamp_variable = {  
        var = Progress_MILDEF_var
        min = 0
        max = 100
    }	
	YUG_calc_MILDEF_var2 = yes
}

YUG_change_intdef_var = {
	custom_effect_tooltip = YUG_localisation_intdef_var_change
	hidden_effect = { add_to_variable = { Progress_INTDEF_var = yug_tempvar } } 
    clamp_variable = {  
        var = Progress_INTDEF_var
        min = 0
        max = 100
    }	
	YUG_calc_INTDEF_var2 = yes
}